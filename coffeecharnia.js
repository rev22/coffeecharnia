// Generated by CoffeeScript 1.6.3-reflective
(function(x) {
  var error;
  try {
    return x();
  } catch (_error) {
    error = _error;
    return alert("Error while loading coffeecharnia: " + error);
  }
})(function() {
  var HtmlGizmo;
  return window.coffeecharnia = {
    config: {
      coffeescriptUrl: "coffee-script.js",
      codeLogUrl: "http://localhost/cgi-bin/coffeecharnialog"
    },
    pkgInfo: {
      version: "CoffeeCharnia 0.3.65",
      description: "Reflective CoffeeScript Console",
      copyright: "Copyright (c) 2014, 2015 Michele Bini",
      license: "GPL3"
    },
    edit: (function(x) {
      x.coffee = "(target, options)@>\n    { filter } = options if options?\n    # Edit only reflective methods and constants by default\n    filter ?= (k,v)-> (typeof v is 'function' and v.coffee?) or (typeof v in [ 'boolean', 'number', 'string']) or v is null\n    text = @lib.DynmodPrinter.withFilter(filter).limitLines(5000).print(target)\n    text = \"do =>\\n#{text}\".replace(/\\n/g, \"\\n    \")\n    @spawn { target, text }\n\n  ";
      return x;
    })(function(target, options) {
      var filter, text;
      if (options != null) {
        filter = options.filter;
      }
      if (filter == null) {
        filter = function(k, v) {
          var _ref;
          return (typeof v === 'function' && (v.coffee != null)) || ((_ref = typeof v) === 'boolean' || _ref === 'number' || _ref === 'string') || v === null;
        };
      }
      text = this.lib.DynmodPrinter.withFilter(filter).limitLines(5000).print(target);
      text = ("do =>\n" + text).replace(/\n/g, "\n    ");
      return this.spawn({
        target: target,
        text: text
      });
    }),
    exit: (function(x) {
      x.coffee = "@>\n      el = @getElement()\n      el.parentNode.removeChild el\n\n  ";
      return x;
    })(function() {
      var el;
      el = this.getElement();
      return el.parentNode.removeChild(el);
    }),
    exec: (function(x) {
      x.coffee = "(x)@> x.call(@) finally @exit()";
      return x;
    })(function(x) {
      try {
        return x.call(this);
      } finally {
        this.exit();
      }
    }),
    inlineStyle: {
      position: 'absolute',
      overflow: 'auto',
      background: 'black',
      color: '#ddd',
      'text-align': 'initial',
      'font-size': '12px'
    },
    sizePercentage: 70,
    getInlineStyle: (function(x) {
      x.coffee = "@>\n    s = @sizePercentage ? 38\n    fix = (x)-> x.toFixed(2)\n    (g = @gravity)? then\n      [ x, y ] = g\n    else\n      x = y = 1\n    i = @inlineStyle\n    i.top = i.bottom = null\n    ([ (-> i.top = 0),   (-> i.top = \"#{fix((100-s)/2)}%\"),   (-> i.bottom = 0)  ])[y]()\n    i.right = i.left = null\n    ([ (-> i.left = 0),  (-> i.left = \"#{fix((100-s)/2)}%\"),  (-> i.right = 0)   ])[x]()\n    s = fix(s) + \"%\"\n    i.width   = s\n    i.height  = s\n    (for k,v of i\n      v? then \"#{k}:#{v}\" else continue\n    ).join \";\"\n\n  ";
      return x;
    })(function() {
      var fix, g, i, k, s, v, x, y, _ref;
      s = (_ref = this.sizePercentage) != null ? _ref : 38;
      fix = function(x) {
        return x.toFixed(2);
      };
      if ((g = this.gravity) != null) {
        x = g[0], y = g[1];
      } else {
        x = y = 1;
      }
      i = this.inlineStyle;
      i.top = i.bottom = null;
      [
        (function() {
          return i.top = 0;
        }), (function() {
          return i.top = "" + (fix((100 - s) / 2)) + "%";
        }), (function() {
          return i.bottom = 0;
        })
      ][y]();
      i.right = i.left = null;
      [
        (function() {
          return i.left = 0;
        }), (function() {
          return i.left = "" + (fix((100 - s) / 2)) + "%";
        }), (function() {
          return i.right = 0;
        })
      ][x]();
      s = fix(s) + "%";
      i.width = s;
      i.height = s;
      return ((function() {
        var _results;
        _results = [];
        for (k in i) {
          v = i[k];
          if (v != null) {
            _results.push("" + k + ":" + v);
          } else {
            continue;
          }
        }
        return _results;
      })()).join(";");
    }),
    setStyle: (function(x) {
      x.coffee = "(k,v)@> @inlineStyle[k] = v; @updateInlineStyle()";
      return x;
    })(function(k, v) {
      this.inlineStyle[k] = v;
      return this.updateInlineStyle();
    }),
    setAlpha: (function(x) {
      x.coffee = "(x)@> @setStyle 'opacity', x";
      return x;
    })(function(x) {
      return this.setStyle('opacity', x);
    }),
    isConverting: false,
    target: null,
    processSource: (function(x) {
      x.coffee = "(s)@> s";
      return x;
    })(function(s) {
      return s;
    }),
    processSourceIntoFunction: (function(x) {
      x.coffee = "(s)@> (\"->\") + (\"\\n\" + s).replace(/\\n/g, \"\\n  \")";
      return x;
    })(function(s) {
      return "->" + ("\n" + s).replace(/\n/g, "\n  ");
    }),
    codelogger: {
      connection: null,
      queue: [],
      backoff: 100,
      backoff_threshold: 400,
      setTimeout: setTimeout,
      clearTimeout: clearTimeout,
      XMLHttpRequest: XMLHttpRequest,
      getPostUrl: (function(x) {
        x.coffee = "@> @charnia.config.codeLogUrl";
        return x;
      })(function() {
        return this.charnia.config.codeLogUrl;
      }),
      log: (function(x) {
        x.coffee = "(x)@>\n      @queue.push x\n      if @connection?\n        if @backoff > @backoff_threshold\n          @abort()\n        else\n          return\n      @ .> slowSaving then\n        setTimeout <. @\n        s = \n        @slowSavingTimeout = setTimeout(\n          =>\n            @slowSavingTimeout = null\n            slowSaving()\n          @slowSavingMs ? 3000\n        )\n      @runQueue()\n\n    ";
        return x;
      })(function(x) {
        var s, setTimeout, slowSaving, _ref;
        this.queue.push(x);
        if (this.connection != null) {
          if (this.backoff > this.backoff_threshold) {
            this.abort();
          } else {
            return;
          }
        }
        if (slowSaving = this.slowSaving) {
          setTimeout = this.setTimeout;
          s = this.slowSavingTimeout = setTimeout((function(_this) {
            return function() {
              _this.slowSavingTimeout = null;
              return slowSaving();
            };
          })(this), (_ref = this.slowSavingMs) != null ? _ref : 3000);
        }
        return this.runQueue();
      }),
      runQueue: (function(x) {
        x.coffee = "@>\n      # console <. @\n      # console.log \"running queue\"\n      @post\n        url: @getPostUrl()\n        \n        data: @queue[0]\n        \n        done: (status, response)=>\n          # console.log \"done #{status}\"\n          status = \"#{status}\"\n          queue <. @\n          again = 1\n          if status[0] is \"2\"\n            # console.log \"done ok\"\n            queue.shift()\n            @backoff = 100\n            unless queue.length\n              again = 0\n              @connection = null\n              slowSavingTimeout <. @ then\n                clearTimeout <. @\n                clearTimeout slowSavingTimeout\n              else\n                @slowSavingDone?()\n          if again\n            # console.log \"again\"\n            @backoff *= 1.5\n            setTimeout <. @\n            setTimeout (=> @runQueue()), @backoff\n\n        timeout: =>\n          # console.log \"timeout\"\n          @backoff *= 1.5\n          setTimeout <. @\n          setTimeout (=> @runQueue()), @backoff\n\n    ";
        return x;
      })(function() {
        return this.post({
          url: this.getPostUrl(),
          data: this.queue[0],
          done: (function(_this) {
            return function(status, response) {
              var again, clearTimeout, queue, setTimeout, slowSavingTimeout;
              status = "" + status;
              queue = _this.queue;
              again = 1;
              if (status[0] === "2") {
                queue.shift();
                _this.backoff = 100;
                if (!queue.length) {
                  again = 0;
                  _this.connection = null;
                  if (slowSavingTimeout = _this.slowSavingTimeout) {
                    clearTimeout = _this.clearTimeout;
                    clearTimeout(slowSavingTimeout);
                  } else {
                    if (typeof _this.slowSavingDone === "function") {
                      _this.slowSavingDone();
                    }
                  }
                }
              }
              if (again) {
                _this.backoff *= 1.5;
                setTimeout = _this.setTimeout;
                return setTimeout((function() {
                  return _this.runQueue();
                }), _this.backoff);
              }
            };
          })(this),
          timeout: (function(_this) {
            return function() {
              var setTimeout;
              _this.backoff *= 1.5;
              setTimeout = _this.setTimeout;
              return setTimeout((function() {
                return _this.runQueue();
              }), _this.backoff);
            };
          })(this)
        });
      }),
      post: (function(x) {
        x.coffee = "({ url, data, done, timeout })@>\n      # console <. @\n      r = new @XMLHttpRequest\n      r.open 'POST', url, true\n      r.setRequestHeader 'Content-Type', 'text/plain; charset=UTF-8'\n      # r.responseType = \"application/json\"\n      r.send data\n      readyStateDone = r.DONE\n      r.onreadystatechange = ->\n        # console.log [ @readyState, @status, @responseText, @response ]\n        return unless @readyState is readyStateDone\n        @onreadystatechange = null\n        if !done?\n          throw \"nulllll\"\n        done(@status, @response ? @responseText)\n      r.ontimeout = timeout\n      @connection = r\n\n    ";
        return x;
      })(function(_arg) {
        var data, done, r, readyStateDone, timeout, url;
        url = _arg.url, data = _arg.data, done = _arg.done, timeout = _arg.timeout;
        r = new this.XMLHttpRequest;
        r.open('POST', url, true);
        r.setRequestHeader('Content-Type', 'text/plain; charset=UTF-8');
        r.send(data);
        readyStateDone = r.DONE;
        r.onreadystatechange = function() {
          var _ref;
          if (this.readyState !== readyStateDone) {
            return;
          }
          this.onreadystatechange = null;
          if (done == null) {
            throw "nulllll";
          }
          return done(this.status, (_ref = this.response) != null ? _ref : this.responseText);
        };
        r.ontimeout = timeout;
        return this.connection = r;
      }),
      abort: (function(x) {
        x.coffee = "@>\n      @ .> connection then\n        connection.abort()\n        @connection = null\n                 \n  ";
        return x;
      })(function() {
        var connection;
        if (connection = this.connection) {
          connection.abort();
          return this.connection = null;
        }
      })
    },
    runCode: (function(x) {
      x.coffee = "(x)@>\n      if @config.codeLogUrl?\n        @codelogger.charnia = @\n        @codelogger.slowSaving = =>\n          @view.coffeecharniaConsole.appendChild do=>\n            slowSavingMessage = @lib.document.createElement \"div\"\n            slowSavingMessage.setAttribute \"style\", \"position:absolute;top:0;right:0;font-size:200%;background:red;color:black\"\n            slowSavingMessage.innerHTML = \"Slow saving...\"\n            @view .< slowSavingMessage\n            slowSavingMessage\n        @codelogger.slowSavingDone = =>\n          @view .> slowSavingMessage then\n            @view.coffeecharniaConsole.removeChild slowSavingMessage\n            delete @view.slowSavingMessage\n        @codelogger.log x\n      { target } = @\n      if target is @global\n        js = @libs.CoffeeScript.compile(@processSource(x), bare:true)\n        @eval js\n      else\n        js = @libs.CoffeeScript.compile(@processSourceIntoFunction(@processSource(x)), bare:true)\n        @eval(\"#{js}\").call(target ? @)\n                 \n  ";
      return x;
    })(function(x) {
      var js, target;
      if (this.config.codeLogUrl != null) {
        this.codelogger.charnia = this;
        this.codelogger.slowSaving = (function(_this) {
          return function() {
            return _this.view.coffeecharniaConsole.appendChild((function() {
              var slowSavingMessage;
              slowSavingMessage = _this.lib.document.createElement("div");
              slowSavingMessage.setAttribute("style", "position:absolute;top:0;right:0;font-size:200%;background:red;color:black");
              slowSavingMessage.innerHTML = "Slow saving...";
              _this.view.slowSavingMessage = slowSavingMessage;
              return slowSavingMessage;
            })());
          };
        })(this);
        this.codelogger.slowSavingDone = (function(_this) {
          return function() {
            var slowSavingMessage;
            if (slowSavingMessage = _this.view.slowSavingMessage) {
              _this.view.coffeecharniaConsole.removeChild(slowSavingMessage);
              return delete _this.view.slowSavingMessage;
            }
          };
        })(this);
        this.codelogger.log(x);
      }
      target = this.target;
      if (target === this.global) {
        js = this.libs.CoffeeScript.compile(this.processSource(x), {
          bare: true
        });
        return this["eval"](js);
      } else {
        js = this.libs.CoffeeScript.compile(this.processSourceIntoFunction(this.processSource(x)), {
          bare: true
        });
        return this["eval"]("" + js).call(target != null ? target : this);
      }
    }),
    evalWithSourceMap: (function(x) {
      x.coffee = "(x)@>\n      # This technique does not seem to work properly on Chromium 22\n      { js, sourceMapV3, file_name } = @libs.CoffeeScript.compile x, sourceMap: 1\n      @lastSourceMap = \"\"\n      @eval(js)\n                 \n  ";
      return x;
    })(function(x) {
      var file_name, js, sourceMapV3, _ref;
      _ref = this.libs.CoffeeScript.compile(x, {
        sourceMap: 1
      }), js = _ref.js, sourceMapV3 = _ref.sourceMapV3, file_name = _ref.file_name;
      this.lastSourceMap = "";
      return this["eval"](js);
    }),
    preQuote: (function(x) {
      x.coffee = "(x)@> \"<pre>#{ x.replace /</g, \"&lt;\" }</pre>\"";
      return x;
    })(function(x) {
      return "<pre>" + (x.replace(/</g, "&lt;")) + "</pre>";
    }),
    printVal: (function(x) {
      x.coffee = "(x)@>\n      @preQuote(@lib.DynmodPrinter.limitLines(1000).print(x))\n      # x.toString()\n                 \n  ";
      return x;
    })(function(x) {
      return this.preQuote(this.lib.DynmodPrinter.limitLines(1000).print(x));
    }),
    recalculateTextareaSize: (function(x) {
      x.coffee = "@>\n      { setTimeout } = @\n      setTimeout (=>\n        editor = @view.coffeeArea.transformed\n        x = editor.container.parentNode\n        x.style.height = x.parentNode.getClientRects()[0].height + \"px\"\n        editor.resize()\n        editor.renderer.scrollCursorIntoView()\n      ), 0\n    \n  ";
      return x;
    })(function() {
      var setTimeout;
      setTimeout = this.setTimeout;
      return setTimeout(((function(_this) {
        return function() {
          var editor, x;
          editor = _this.view.coffeeArea.transformed;
          x = editor.container.parentNode;
          x.style.height = x.parentNode.getClientRects()[0].height + "px";
          editor.resize();
          return editor.renderer.scrollCursorIntoView();
        };
      })(this)), 0);
    }),
    runButtonClick: (function(x) {
      x.coffee = "@>\n      x = @view.coffeeArea.value\n      isError = null\n      val = if true\n        @runCode x catch error\n          isError = true\n          val = error.stack ? error?.toString() ? error ? \"Undefined error\"\n      else\n        @evalWithSourceMap x\n      { coffeecharniaConsole: console, introFooter, resultFooter, resultDatum } = @view\n      if val?\n        introFooter.setAttribute \"style\", \"display:none\"\n        # resultFooter.setAttribute \"style\", \"max-height:#{console.getBoundingClientRect().height / 2.6 | 0}px\"\n        resultFooter.setAttribute \"style\", \"\"\n        if isError\n          resultDatum.innerHTML = @preQuote val\n        else\n          resultDatum.innerHTML = @printVal val              \n      else\n        introFooter.setAttribute \"style\", \"\"\n        resultFooter.setAttribute \"style\", \"display:none\"\n        resultDatum.innerHTML = \"\"\n      (@aceEditor())? then\n        @recalculateTextareaSize()\n      else\n        { setTimeout } = @\n        if true\n          # Keep it Simple!\n          setTimeout (=> @view.coffeeArea.scrollTop += 999999), 0\n          return \n        fixUp = =>\n          area = @view.coffeeArea\n          area.focus()\n          (pos = area.selectionEnd)? then\n            pos--\n            area.setSelectionRange?(pos, pos)\n        setTimeout fixUp, 0\n        \n  ";
      return x;
    })(function() {
      var console, error, fixUp, introFooter, isError, resultDatum, resultFooter, setTimeout, val, x, _ref;
      x = this.view.coffeeArea.value;
      isError = null;
      val = (function() {
        var _ref, _ref1, _ref2;
        if (true) {
          try {
            return this.runCode(x);
          } catch (_error) {
            error = _error;
            isError = true;
            return val = (_ref = (_ref1 = (_ref2 = error.stack) != null ? _ref2 : error != null ? error.toString() : void 0) != null ? _ref1 : error) != null ? _ref : "Undefined error";
          }
        } else {
          return this.evalWithSourceMap(x);
        }
      }).call(this);
      _ref = this.view, console = _ref.coffeecharniaConsole, introFooter = _ref.introFooter, resultFooter = _ref.resultFooter, resultDatum = _ref.resultDatum;
      if (val != null) {
        introFooter.setAttribute("style", "display:none");
        resultFooter.setAttribute("style", "");
        if (isError) {
          resultDatum.innerHTML = this.preQuote(val);
        } else {
          resultDatum.innerHTML = this.printVal(val);
        }
      } else {
        introFooter.setAttribute("style", "");
        resultFooter.setAttribute("style", "display:none");
        resultDatum.innerHTML = "";
      }
      if ((this.aceEditor()) != null) {
        return this.recalculateTextareaSize();
      } else {
        setTimeout = this.setTimeout;
        if (true) {
          setTimeout(((function(_this) {
            return function() {
              return _this.view.coffeeArea.scrollTop += 999999;
            };
          })(this)), 0);
          return;
        }
        fixUp = (function(_this) {
          return function() {
            var area, pos;
            area = _this.view.coffeeArea;
            area.focus();
            if ((pos = area.selectionEnd) != null) {
              pos--;
              return typeof area.setSelectionRange === "function" ? area.setSelectionRange(pos, pos) : void 0;
            }
          };
        })(this);
        return setTimeout(fixUp, 0);
      }
    }),
    aceThemeMerblue: (function(x) {
      x.coffee = "@>\n    id = \"ace-merblue\"\n    document <. @lib\n    document.getElementById(id) or document.head.appendChild do->\n      e = document.createElement \"style\"\n      e .< id\n      e.innerHTML =\n        ''''\n        \n        .ace-merblue .ace_gutter {\n          background: #002;\n          color: #9ff;\n        }\n        \n        .ace-merblue .ace_print-margin {\n          width: 1px;\n          background: #023;\n        }\n        \n        .ace-merblue .ace_scroller {\n           background-color: #000005;\n        }\n        \n        .ace-merblue .ace_text-layer {\n           color: #ddd;\n        }\n        \n        .ace-merblue .ace_cursor {\n           border-left: 2px solid #fdf;\n        }\n        \n        .ace-merblue .ace_overwrite-cursors .ace_cursor {\n          border-left: 0px;\n          border-bottom: 1px solid #fff;\n        }\n        \n        .ace-merblue .ace_marker-layer .ace_selection {\n           background: #444;\n        }\n        \n        .ace-merblue.ace_multiselect .ace_selection.ace_start {\n          box-shadow: 0 0 3px 0px #111;\n          border-radius: 2px;\n        }\n        \n        .ace-merblue .ace_marker-layer .ace_step {\n           background: rgb(102, 82, 0);\n        }\n        \n        .ace-merblue .ace_marker-layer .ace_bracket {\n          margin: -1px 0 0 -1px;\n          border: 1px solid #444;\n        }\n        \n        .ace-merblue .ace_marker-layer .ace_active-line {\n          background: #000015;\n        }\n        \n        .ace-merblue .ace_gutter-active-line {\n          background-color: #345;\n        }\n        \n        .ace-merblue .ace_marker-layer .ace_selected-word {\n          border: 1px solid #444;\n        }\n        \n        .ace-merblue .ace_invisible {\n          color: #333;\n        }\n        \n        .ace-merblue .ace_entity.ace_name.ace_tag,\n        .ace-merblue .ace_keyword,\n        .ace-merblue .ace_meta,\n        .ace-merblue .ace_meta.ace_tag,\n        .ace-merblue .ace_storage,\n        .ace-merblue .ace_support.ace_function {\n          color: #0ff;\n        }\n        \n        .ace-merblue .ace_constant,\n        .ace-merblue .ace_constant.ace_character,\n        .ace-merblue .ace_constant.ace_character.ace_escape,\n        .ace-merblue .ace_constant.ace_other,\n        .ace-merblue .ace_support.ace_type {\n          color: #5ee;\n        }\n        \n        .ace-merblue .ace_constant.ace_character.ace_escape {\n          color: #e5e;\n        }\n        \n        .ace-merblue .ace_constant.ace_language {\n          color: #09d;\n        }\n\n        .ace-merblue .ace_variable {\n          color: #9dc;\n        }\n\n        .ace-merblue .ace_variable.ace_parameter {\n          color: #5da;\n        }\n\n        .ace-merblue .ace_variable.ace_language {\n          color: #3da;\n        }\n                \n        \n        .ace-merblue .ace_constant.ace_library,\n        .ace-merblue .ace_string,\n        .ace-merblue .ace_support.ace_constant {\n          color: #b5d;\n        }\n        \n        .ace-merblue .ace_constant.ace_numeric {\n          color: #3ee;\n        }\n        \n        .ace-merblue .ace_invalid {\n          color: #FFF;\n          background-color: #900;\n        }\n        \n        .ace-merblue .ace_fold {\n          background-color: #002;\n          border-color: #00f;\n        }\n        \n        .ace-merblue .ace_comment {\n          font-style: italic;\n          color: #e93;\n        }\n        \n        .ace-merblue .ace_entity.ace_other.ace_attribute-name {\n          color: #ff8;\n        }\n        \n        .ace-merblue .ace_markup.ace_underline {\n          text-decoration: underline;\n        }\n        \n        .ace-merblue .ace_indent-guide {\n          background: #101;\n        }\n\n      e\n    cssClass: id\n        \n  ";
      return x;
    })(function() {
      var document, id;
      id = "ace-merblue";
      document = this.lib.document;
      document.getElementById(id) || document.head.appendChild((function() {
        var e;
        e = document.createElement("style");
        e.id = id;
        e.innerHTML = "\n.ace-merblue .ace_gutter {\n  background: #002;\n  color: #9ff;\n}\n\n.ace-merblue .ace_print-margin {\n  width: 1px;\n  background: #023;\n}\n\n.ace-merblue .ace_scroller {\n   background-color: #000005;\n}\n\n.ace-merblue .ace_text-layer {\n   color: #ddd;\n}\n\n.ace-merblue .ace_cursor {\n   border-left: 2px solid #fdf;\n}\n\n.ace-merblue .ace_overwrite-cursors .ace_cursor {\n  border-left: 0px;\n  border-bottom: 1px solid #fff;\n}\n\n.ace-merblue .ace_marker-layer .ace_selection {\n   background: #444;\n}\n\n.ace-merblue.ace_multiselect .ace_selection.ace_start {\n  box-shadow: 0 0 3px 0px #111;\n  border-radius: 2px;\n}\n\n.ace-merblue .ace_marker-layer .ace_step {\n   background: rgb(102, 82, 0);\n}\n\n.ace-merblue .ace_marker-layer .ace_bracket {\n  margin: -1px 0 0 -1px;\n  border: 1px solid #444;\n}\n\n.ace-merblue .ace_marker-layer .ace_active-line {\n  background: #000015;\n}\n\n.ace-merblue .ace_gutter-active-line {\n  background-color: #345;\n}\n\n.ace-merblue .ace_marker-layer .ace_selected-word {\n  border: 1px solid #444;\n}\n\n.ace-merblue .ace_invisible {\n  color: #333;\n}\n\n.ace-merblue .ace_entity.ace_name.ace_tag,\n.ace-merblue .ace_keyword,\n.ace-merblue .ace_meta,\n.ace-merblue .ace_meta.ace_tag,\n.ace-merblue .ace_storage,\n.ace-merblue .ace_support.ace_function {\n  color: #0ff;\n}\n\n.ace-merblue .ace_constant,\n.ace-merblue .ace_constant.ace_character,\n.ace-merblue .ace_constant.ace_character.ace_escape,\n.ace-merblue .ace_constant.ace_other,\n.ace-merblue .ace_support.ace_type {\n  color: #5ee;\n}\n\n.ace-merblue .ace_constant.ace_character.ace_escape {\n  color: #e5e;\n}\n\n.ace-merblue .ace_constant.ace_language {\n  color: #09d;\n}\n\n.ace-merblue .ace_variable {\n  color: #9dc;\n}\n\n.ace-merblue .ace_variable.ace_parameter {\n  color: #5da;\n}\n\n.ace-merblue .ace_variable.ace_language {\n  color: #3da;\n}\n        \n\n.ace-merblue .ace_constant.ace_library,\n.ace-merblue .ace_string,\n.ace-merblue .ace_support.ace_constant {\n  color: #b5d;\n}\n\n.ace-merblue .ace_constant.ace_numeric {\n  color: #3ee;\n}\n\n.ace-merblue .ace_invalid {\n  color: #FFF;\n  background-color: #900;\n}\n\n.ace-merblue .ace_fold {\n  background-color: #002;\n  border-color: #00f;\n}\n\n.ace-merblue .ace_comment {\n  font-style: italic;\n  color: #e93;\n}\n\n.ace-merblue .ace_entity.ace_other.ace_attribute-name {\n  color: #ff8;\n}\n\n.ace-merblue .ace_markup.ace_underline {\n  text-decoration: underline;\n}\n\n.ace-merblue .ace_indent-guide {\n  background: #101;\n}\n";
        return e;
      })());
      return {
        cssClass: id
      };
    }),
    setup: (function(x) {
      x.coffee = "@>\n      # @fs.readFileSync = (x)=> @readFileSync(x)\n      # @fs.writeFileSync = (x)=> @readFileSync(x)\n      # @ace? and @setupAce()\n      app = @\n      @view.runButton.onclick      = => @runButtonClick()\n      @view.enlargeButton.onclick  = => @enlargeButtonClick()\n      # @view.dragButton.onmousedown = (event)-> app.dragButtonDown(event,this)\n      @view.dragButton.onmouseup   = (event)-> app.dragButtonUp(event,this)\n      @view.shrinkButton.onclick   = => @shrinkButtonClick()\n      @view.killButton.onclick     = => @killButtonClick()\n      area = @view.coffeeArea\n      area.focus()\n      (pos = area.value.length)? then area.setSelectionRange?(pos, pos)\n      area.setupTransform = (editor)->\n        area.transformed = editor\n        app.aceRefcoffeeMode (mode)->\n          editor.getSession().setMode(mode)\n        \n        editor.setTheme app.aceThemeMerblue()\n      @getElement().onkeydown = (event)->\n        return app.handleEnterKey?(event) if event.keyCode and event.keyCode is 13\n        true\n                 \n  ";
      return x;
    })(function() {
      var app, area, pos;
      app = this;
      this.view.runButton.onclick = (function(_this) {
        return function() {
          return _this.runButtonClick();
        };
      })(this);
      this.view.enlargeButton.onclick = (function(_this) {
        return function() {
          return _this.enlargeButtonClick();
        };
      })(this);
      this.view.dragButton.onmouseup = function(event) {
        return app.dragButtonUp(event, this);
      };
      this.view.shrinkButton.onclick = (function(_this) {
        return function() {
          return _this.shrinkButtonClick();
        };
      })(this);
      this.view.killButton.onclick = (function(_this) {
        return function() {
          return _this.killButtonClick();
        };
      })(this);
      area = this.view.coffeeArea;
      area.focus();
      if ((pos = area.value.length) != null) {
        if (typeof area.setSelectionRange === "function") {
          area.setSelectionRange(pos, pos);
        }
      }
      area.setupTransform = function(editor) {
        area.transformed = editor;
        app.aceRefcoffeeMode(function(mode) {
          return editor.getSession().setMode(mode);
        });
        return editor.setTheme(app.aceThemeMerblue());
      };
      return this.getElement().onkeydown = function(event) {
        if (event.keyCode && event.keyCode === 13) {
          return typeof app.handleEnterKey === "function" ? app.handleEnterKey(event) : void 0;
        }
        return true;
      };
    }),
    getElement: (function(x) {
      x.coffee = "@> @view.coffeecharniaConsole";
      return x;
    })(function() {
      return this.view.coffeecharniaConsole;
    }),
    killButtonClick: (function(x) {
      x.coffee = "@> @exit()";
      return x;
    })(function() {
      return this.exit();
    }),
    updateInlineStyle: (function(x) {
      x.coffee = "@> @getElement().setAttribute('style', @getInlineStyle())";
      return x;
    })(function() {
      return this.getElement().setAttribute('style', this.getInlineStyle());
    }),
    shrinkButtonClick: (function(x) {
      x.coffee = "@>\n      el = @getElement()\n      s = @sizePercentage ? 38\n      s = s / 100.0\n      s = s / (1 + 0.05 + (1 - s) / 5)\n      s = 0.1 if s < 0.1\n      @sizePercentage = s * 100\n      @updateInlineStyle()\n      @recalculateTextareaSize()\n  \n  ";
      return x;
    })(function() {
      var el, s, _ref;
      el = this.getElement();
      s = (_ref = this.sizePercentage) != null ? _ref : 38;
      s = s / 100.0;
      s = s / (1 + 0.05 + (1 - s) / 5);
      if (s < 0.1) {
        s = 0.1;
      }
      this.sizePercentage = s * 100;
      this.updateInlineStyle();
      return this.recalculateTextareaSize();
    }),
    dragButtonUp: (function(x) {
      x.coffee = "(ev,el)@>\n     r = el.getClientRects()[0]\n     x = (((ev.clientX - r.left) / r.width) * 3)|0\n     y = (((ev.clientY - r.top) / r.height) * 3)|0\n     x < 0 then x = 0 else x > 3 then x = 3\n     y < 0 then y = 0 else y > 3 then y = 3\n     @gravity = [ x, y ]\n     el = @getElement()\n     @updateInlineStyle()\n     @recalculateTextareaSize()              \n       \n  ";
      return x;
    })(function(ev, el) {
      var r, x, y;
      r = el.getClientRects()[0];
      x = (((ev.clientX - r.left) / r.width) * 3) | 0;
      y = (((ev.clientY - r.top) / r.height) * 3) | 0;
      if (x < 0) {
        x = 0;
      } else if (x > 3) {
        x = 3;
      }
      if (y < 0) {
        y = 0;
      } else if (y > 3) {
        y = 3;
      }
      this.gravity = [x, y];
      el = this.getElement();
      this.updateInlineStyle();
      return this.recalculateTextareaSize();
    }),
    enlargeButtonClick: (function(x) {
      x.coffee = "@>\n     el = @getElement()\n     s = @sizePercentage ? 38\n     s = s / 100.0\n     s = s * (1 + 0.05 + (1 - s)/5)\n     s = 1 if s > 1\n     @sizePercentage = s * 100\n     @updateInlineStyle()\n     @recalculateTextareaSize()\n   \n  ";
      return x;
    })(function() {
      var el, s, _ref;
      el = this.getElement();
      s = (_ref = this.sizePercentage) != null ? _ref : 38;
      s = s / 100.0;
      s = s * (1 + 0.05 + (1 - s) / 5);
      if (s > 1) {
        s = 1;
      }
      this.sizePercentage = s * 100;
      this.updateInlineStyle();
      return this.recalculateTextareaSize();
    }),
    hideButtonClick: (function(x) {
      x.coffee = "@>\n     el = @getElement()\n     el.setAttribute \"style\", el.getAttribute(\"style\") + \";display:none\"\n                 \n  ";
      return x;
    })(function() {
      var el;
      el = this.getElement();
      return el.setAttribute("style", el.getAttribute("style") + ";display:none");
    }),
    getSelection: (function(x) {
      x.coffee = "@>\n      (t = @view.coffeeArea.transformed)? then\n        t.getSelection()\n      else\n        @getInputSelection(@view)\n                 \n  ";
      return x;
    })(function() {
      var t;
      if ((t = this.view.coffeeArea.transformed) != null) {
        return t.getSelection();
      } else {
        return this.getInputSelection(this.view);
      }
    }),
    aceEditor: (function(x) {
      x.coffee = "@>\n      @view.coffeeArea.transformed\n                    \n  ";
      return x;
    })(function() {
      return this.view.coffeeArea.transformed;
    }),
    handleEnterKey: (function(x) {
      x.coffee = "(event)@>\n      if event.shiftKey\n        return true\n      if event.ctrlKey\n            @runButtonClick()\n            return false\n      (editor = @aceEditor())? then\n        alert = @alert\n        cursorPosition = editor.getCursorPosition()\n        doc = editor.session.doc\n        lines = doc.getLength()\n        # lines - 1 <= cursorPosition.row then\n        line = doc.getLine(cursorPosition.row)\n        !/\\S/.test(line) then\n                line.length is cursorPosition.column then\n                    @runButtonClick()\n                    return false\n      else\n        area = @view.coffeeArea\n        (end = area.selectionEnd)? then\n          text = area.value\n          text.length > 0 and text.length <= end and text[text.length - 1] is \"\\n\" then\n              @runButtonClick()\n              return false\n      true\n                 \n  ";
      return x;
    })(function(event) {
      var alert, area, cursorPosition, doc, editor, end, line, lines, text;
      if (event.shiftKey) {
        return true;
      }
      if (event.ctrlKey) {
        this.runButtonClick();
        return false;
      }
      if ((editor = this.aceEditor()) != null) {
        alert = this.alert;
        cursorPosition = editor.getCursorPosition();
        doc = editor.session.doc;
        lines = doc.getLength();
        line = doc.getLine(cursorPosition.row);
        if (!/\S/.test(line)) {
          if (line.length === cursorPosition.column) {
            this.runButtonClick();
            return false;
          }
        }
      } else {
        area = this.view.coffeeArea;
        if ((end = area.selectionEnd) != null) {
          text = area.value;
          if (text.length > 0 && text.length <= end && text[text.length - 1] === "\n") {
            this.runButtonClick();
            return false;
          }
        }
      }
      return true;
    }),
    aceRefcoffeeMode: (function(x) {
      x.coffee = "(cb)@>\n      cb? then\n        ace = @libs.ace\n        ace.config.loadModule \"ace/mode/coffee\", =>\n          @libs.aceRefcoffeeMode.setup ace: @libs.ace, CoffeeScript: @libs.CoffeeScript\n          cb \"ace/mode/refcoffee\"\n      else\n        try\n          @libs.aceRefcoffeeMode.setup ace: @libs.ace, CoffeeScript: @libs.CoffeeScript\n          @libs.ace.require(\"ace/mode/refcoffee\")\n          \"ace/mode/refcoffee\"\n        catch e\n          \"ace/mode/coffee\"\n    \n  ";
      return x;
    })(function(cb) {
      var ace, e;
      if (cb != null) {
        ace = this.libs.ace;
        return ace.config.loadModule("ace/mode/coffee", (function(_this) {
          return function() {
            _this.libs.aceRefcoffeeMode.setup({
              ace: _this.libs.ace,
              CoffeeScript: _this.libs.CoffeeScript
            });
            return cb("ace/mode/refcoffee");
          };
        })(this));
      } else {
        try {
          this.libs.aceRefcoffeeMode.setup({
            ace: this.libs.ace,
            CoffeeScript: this.libs.CoffeeScript
          });
          this.libs.ace.require("ace/mode/refcoffee");
          return "ace/mode/refcoffee";
        } catch (_error) {
          e = _error;
          return "ace/mode/coffee";
        }
      }
    }),
    lib: {
      camelcapBookmarklet: {
        lib: {
          document: document,
          RegExp: RegExp
        },
        setup: (function(x) {
          x.coffee = "(ace)@>\n        { document, RegExp } = @lib\n        return if document.getElementById \"ccapcss\"\n        ace.require [\"ace/layer/text\"], ({Text}) ->\n          return if document.getElementById \"ccapcss\"\n          orig = Text.prototype.$renderToken\n        \n          patched = do (\n            rgx = new RegExp \"[a-z][0-9]*[A-Z]\", \"g\"\n          ) -> (builder, col, token, value) ->\n            if match = rgx.exec value\n              type = token.type\n              type_c = type + \".ccap\"\n              p = 0\n              loop\n                q = rgx.lastIndex - 1\n                s = value.substring(p, q)\n                col = orig.call @, builder, col, { type, value: s }, s\n                s = value.substring(q, p = q + 1)\n                col = orig.call @, builder, col, { type: type_c, value: s }, s\n                break unless match = rgx.exec value\n              s = value.substring(p)\n              orig.call @, builder, col, { type, value: s }, s            \n            else\n              orig.apply @, arguments\n        \n          Text.prototype.$renderToken = patched\n        \n          x = document.createElement \"style\"\n          x.id = \"ccapcss\"\n          x.innerHTML = \".ace_ccap { font-weight: bold; }\"\n          document.head.appendChild x\n    ";
          return x;
        })(function(ace) {
          var RegExp, document, _ref;
          _ref = this.lib, document = _ref.document, RegExp = _ref.RegExp;
          if (document.getElementById("ccapcss")) {
            return;
          }
          return ace.require(["ace/layer/text"], function(_arg) {
            var Text, orig, patched, x;
            Text = _arg.Text;
            if (document.getElementById("ccapcss")) {
              return;
            }
            orig = Text.prototype.$renderToken;
            patched = (function(rgx) {
              return function(builder, col, token, value) {
                var match, p, q, s, type, type_c;
                if (match = rgx.exec(value)) {
                  type = token.type;
                  type_c = type + ".ccap";
                  p = 0;
                  while (true) {
                    q = rgx.lastIndex - 1;
                    s = value.substring(p, q);
                    col = orig.call(this, builder, col, {
                      type: type,
                      value: s
                    }, s);
                    s = value.substring(q, p = q + 1);
                    col = orig.call(this, builder, col, {
                      type: type_c,
                      value: s
                    }, s);
                    if (!(match = rgx.exec(value))) {
                      break;
                    }
                  }
                  s = value.substring(p);
                  return orig.call(this, builder, col, {
                    type: type,
                    value: s
                  }, s);
                } else {
                  return orig.apply(this, arguments);
                }
              };
            })(new RegExp("[a-z][0-9]*[A-Z]", "g"));
            Text.prototype.$renderToken = patched;
            x = document.createElement("style");
            x.id = "ccapcss";
            x.innerHTML = ".ace_ccap { font-weight: bold; }";
            return document.head.appendChild(x);
          });
        })
      },
      Error: Error,
      window: window,
      document: document,
      deleteNode: (function(x) {
        x.coffee = "(x)@> x.parentNode.removeChild(x)";
        return x;
      })(function(x) {
        return x.parentNode.removeChild(x);
      }),
      HtmlGizmo: HtmlGizmo = {
        pkgInfo: {
          version: "HtmlGizmo 2.1.1",
          description: "Reflective Html Widgets",
          copyright: "Copyright (c) 2014 Michele Bini",
          license: "GPL3"
        },
        setElement: function(e) {
          this.element = e;
          return e.htmlGizmo = this;
        },
        getGlobalCss: (function(x) {
          x.coffee = "@>";
          return x;
        })(function() {}),
        getElement: (function(x) {
          x.coffee = "(name)@>\n        # Get a named element of the widget\n        @element.getElementsByClassName(@cssClass(name))?[0]\n      \n      # For use inside 'make'\n      ";
          return x;
        })(function(name) {
          var _ref;
          return (_ref = this.element.getElementsByClassName(this.cssClass(name))) != null ? _ref[0] : void 0;
        }),
        cssClass: (function(x) {
          x.coffee = "(name)@>\n        @cssPrefix + name\n      ";
          return x;
        })(function(name) {
          return this.cssPrefix + name;
        }),
        homeEvent: (function(x) {
          x.coffee = "(name)@>\n        \"javascript:#{@eventHome ? throw \"No event home defined\"}.#{name}(event,this)\"\n      \n      # Implementation\n      ";
          return x;
        })(function(name) {
          var _ref;
          return "javascript:" + ((function() {
            if ((_ref = this.eventHome) != null) {
              return _ref;
            } else {
              throw "No event home defined";
            }
          }).call(this)) + "." + name + "(event,this)";
        }),
        eventHome: null,
        cssPrefix: "",
        element: null,
        make: (function(x) {
          x.coffee = "(withHtmlcup, options)@>\n        throw \"virtual method\"\n        # Example of how to invoke this:\n        # element = (htmlGizmo = __proto__: htmlGizmo).make ((x)-> @element = htmlcup.captureFirstTag x), { controller: charnia, text }\n        cssClass = (name)=> @cssClass name\n        homeEvent = (name)=> @homeEvent name\n        containerClass = cssClass 'container'\n        withHtmlcup.call @, ->\n            @div class:containerClass, ->\n                @button onclick:homeEvent(\"click\"), \"Hello\"\n    ";
          return x;
        })(function(withHtmlcup, options) {
          var containerClass, cssClass, homeEvent;
          throw "virtual method";
          cssClass = (function(_this) {
            return function(name) {
              return _this.cssClass(name);
            };
          })(this);
          homeEvent = (function(_this) {
            return function(name) {
              return _this.homeEvent(name);
            };
          })(this);
          containerClass = cssClass('container');
          return withHtmlcup.call(this, function() {
            return this.div({
              "class": containerClass
            }, function() {
              return this.button({
                onclick: homeEvent("click")
              }, "Hello");
            });
          });
        })
      },
      DynmodPrinter: {
        pkgInfo: {
          version: "DynmodPrinter 0.2.7-coffeecharnia.3",
          description: "Generic printer, for data and reflective code",
          copyright: "Copyright (c) 2014 Michele Bini",
          license: "MIT"
        },
        pkgTest: (function(x) {
          x.coffee = "@>\n        testPrint = (v, r)=>\n          r2 = @print(v)\n          if r isnt r2\n            throw \"Expected representation: '#{r}', obtained: '#{r2}'\"\n        testPrint [ ], \"[ ]\"\n        testPrint [ { } ], \"[ { } ]\"\n        testPrint new @Date(\"2014-05-12T23:04:24.627Z\"), 'new Date(\"2014-05-12T23:04:24.627Z\")'\n      ";
          return x;
        })(function() {
          var testPrint;
          testPrint = (function(_this) {
            return function(v, r) {
              var r2;
              r2 = _this.print(v);
              if (r !== r2) {
                throw "Expected representation: '" + r + "', obtained: '" + r2 + "'";
              }
            };
          })(this);
          testPrint([], "[ ]");
          testPrint([{}], "[ { } ]");
          return testPrint(new this.Date("2014-05-12T23:04:24.627Z"), 'new Date("2014-05-12T23:04:24.627Z")');
        }),
        Date: Date,
        Array: Array,
        RegExp: RegExp,
        columns: 74,
        console: console,
        global: window,
        window: window,
        globalName: "window",
        symbolicPackages: true,
        newline: (function(x) {
          x.coffee = "@> true";
          return x;
        })(function() {
          return true;
        }),
        limitLines: (function(x) {
          x.coffee = "(maxLines)@>\n        lines: 0\n        maxLines: maxLines\n        newline: @> @lines++ < @maxLines\n        __proto__: @\n      ";
          return x;
        })(function(maxLines) {
          return {
            lines: 0,
            maxLines: maxLines,
            newline: (function(x) {
              x.coffee = "@> @lines++ < @maxLines";
              return x;
            })(function() {
              return this.lines++ < this.maxLines;
            }),
            __proto__: this
          };
        }),
        withFilter: (function(x) {
          x.coffee = "(filter)@>\n        filter: filter\n        __proto__: @\n      ";
          return x;
        })(function(filter) {
          return {
            filter: filter,
            __proto__: this
          };
        }),
        printSpecialObject: (function(x) {
          x.coffee = "(x, ind)@>\n        if (tagName <. x)? and (getAttribute <. x)?\n          l = \"#{ind}@#{tagName.toLowerCase()} \" + (\n            \"#{a.nodeName}:\\\"#{a.nodeValue}\\\", \" for a in x.attributes \n          ).join(\"\") + \"->\\n\"\n          l = [ l ]\n          ind = ind + \"  \"\n          x = x.firstChild\n          while x?\n            l.push @printSpecialObject(x, ind)\n            x = x.nextSibling\n          l.join \"\"\n        else\n          null\n      ";
          return x;
        })(function(x, ind) {
          var a, getAttribute, l, tagName;
          if (((tagName = x.tagName) != null) && ((getAttribute = x.getAttribute) != null)) {
            l = ("" + ind + "@" + (tagName.toLowerCase()) + " ") + ((function() {
              var _i, _len, _ref, _results;
              _ref = x.attributes;
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                a = _ref[_i];
                _results.push("" + a.nodeName + ":\"" + a.nodeValue + "\", ");
              }
              return _results;
            })()).join("") + "->\n";
            l = [l];
            ind = ind + "  ";
            x = x.firstChild;
            while (x != null) {
              l.push(this.printSpecialObject(x, ind));
              x = x.nextSibling;
            }
            return l.join("");
          } else {
            return null;
          }
        }),
        print: (function(x) {
          x.coffee = "(x, prev, depth = 0, ind = \"\")@>\n          p = arguments.callee\n          depth = depth + 1\n          print = (y)=> p.call @, y, { prev, x }, depth\n          clean = (x)->\n            if /^[(]([(@][^\\n]*)[)]$/.test x\n              x.substring(1, x.length - 1)\n            else\n              x\n          if x == null\n            ind + \"null\"\n          else if x == @global\n            ind + @globalName\n          else if x == undefined\n            ind + \"undefined\"\n          else\n            t = typeof x\n            if t is \"boolean\"\n              ind + if x then \"true\" else \"false\"\n            else if t is \"number\"\n              ind + @printNumber x\n            else if t is \"string\"\n              if x.length > 8 and /\\n/.test x\n                l = x.split(\"\\n\")\n                l = (x.replace /\\\"\\\"\\\"/g, '\\\"\\\"\\\"' for x in l)\n                l.unshift ind + '\"\"\"'\n                l.push     ind + '\"\"\"'\n                l.join(ind + \"\\n\")\n              else\n                ind + '\"' + x.replace(/[\\\"\\\\]/g, (x)-> \"\\\\#{x}\") + '\"'\n            else if t is \"function\"\n              ni = ind + \"  \"\n              if x.coffee?\n                # YAY a reflective function!!!\n                s = x.coffee\n                if depth is 1 or /\\n/.test s\n                  lines = s.split \"\\n\"\n                  if lines.length > 1\n                    if (mn = lines[1].match(/^[ \\t]+/))?\n                      mn = mn[0].length\n                      id = mn - ni.length\n                      if id > 0\n                        x = new @RegExp(\"[ \\\\t]{#{id}}\")\n                        lines = (line.replace x, \"\" for line in lines)\n                      else if id < 0\n                        ni = @Array(-id + 1).join(\" \")\n                        lines = (ni + line for line in lines)                \n                  lines.join(\"\\n\")\n                else\n                  ind + \"(\" + s + \")\"\n              else\n                ind + x.toString().replace(/\\n/g, '\\n' + ni)\n            else if (c = (do (p = prev, c = 1)-> (return c if p.x == x; p = p.prev; c++) while p?; 0))\n              # Report cyclic structures\n              \"<cycle-#{c}+#{depth - c - 1}>\"\n            else if t isnt \"object\"\n              # print object of odd type\n              \"<#{t}>\"\n            else if @Array.isArray x\n              if x.length is 0\n                \"[ ]\"\n              else\n                cl = 2\n                hasLines = false\n                xxxx = for xx in x\n                  break unless @newline()\n                  xx = print xx\n                  hasLines = true if /\\n/.test xx\n                  cl += 2 + xx.length\n                  xx\n                if not hasLines and depth * 2 + cl + 1 < @columns\n                  \"[ \" + xxxx.join(\", \") + \" ]\"\n                else\n                  ni = ind + \"  \"\n                  l = [ ind + \"[\" ]\n                  for xx in xxxx\n                    l.push ni + clean(xx).replace(/\\n/g, '\\n' + ni)\n                  l.push ind + \"]\"\n                  l.join \"\\n\"\n            else if (specialPrinted = @printSpecialObject(x, ind))?\n              specialPrinted\n            else\n              l = [ ]\n              @window?.document?   and   x.id?   and   typeof x.id is \"string\"   and   x is @window.document.getElementById x.id   then\n                return \"#{ind}window.document.getElementById '#{ x.id.replace(/\\'/, \"\\\\'\") }'\"\n              @symbolicPackages and depth > 1 and (packageVersion = x.pkgInfo?.version)? then\n                return ind + \"dynmodArchive.load '\" + packageVersion.replace(/\\ .*/, \"\") + \"'\"\n              ind = \"\"\n              if x instanceof @Date\n                return \"new Date(\\\"#{x.toISOString()}\\\")\"\n              keys = (k for k of x)\n              if keys.length is 0\n                return \"{ }\"\n              unless (!prev? or typeof prev.x is \"object\" and !@Array.isArray prev.x)\n                l = [ \"do->\" ]\n                ind = \"  \"\n              ni = ind + \"  \"\n              # keys = (h)@> (x for x of h).sort()\n              kvFilter = @filter ? (-> true)\n              for k in keys\n                break unless @newline()\n                verr = null\n                v = x[k] catch error\n                  verr = error.toString()\n                if verr?\n                  verr = \"Error:#{verr}\" unless /^[Ee]rror:/.test verr\n                  l.push \"#{ind}# #{k}: <#{verr}>\"\n                else if !kvFilter(k,v)\n                  l.push \"#{ind}# #{k}: <#{typeof v}>\"\n                else if @global[k] is v\n                  # l.push ind + k + \": eval \" + \"'\" + k + \"'\"\n                  l.push \"#{ind}#{k}: #{@globalName}.#{k}\"\n                else\n                  v = clean(print v).replace(/\\n/g, '\\n' + ni)\n                  if !/\\n/.test(v) and  ind.length + k.toString().length + 2 + v.length < @columns\n                    l.push ind + k + \": \" + v\n                  else\n                    l.push ind + k + \":\"\n                    l.push ni + v\n              if l.length\n                l.join \"\\n\"\n              else\n                \"{ }\"\n      ";
          return x;
        })(function(x, prev, depth, ind) {
          var c, cl, clean, error, hasLines, id, k, keys, kvFilter, l, line, lines, mn, ni, p, packageVersion, print, s, specialPrinted, t, v, verr, xx, xxxx, _i, _j, _len, _len1, _ref, _ref1, _ref2;
          if (depth == null) {
            depth = 0;
          }
          if (ind == null) {
            ind = "";
          }
          p = arguments.callee;
          depth = depth + 1;
          print = (function(_this) {
            return function(y) {
              return p.call(_this, y, {
                prev: prev,
                x: x
              }, depth);
            };
          })(this);
          clean = function(x) {
            if (/^[(]([(@][^\n]*)[)]$/.test(x)) {
              return x.substring(1, x.length - 1);
            } else {
              return x;
            }
          };
          if (x === null) {
            return ind + "null";
          } else if (x === this.global) {
            return ind + this.globalName;
          } else if (x === void 0) {
            return ind + "undefined";
          } else {
            t = typeof x;
            if (t === "boolean") {
              return ind + (x ? "true" : "false");
            } else if (t === "number") {
              return ind + this.printNumber(x);
            } else if (t === "string") {
              if (x.length > 8 && /\n/.test(x)) {
                l = x.split("\n");
                l = (function() {
                  var _i, _len, _results;
                  _results = [];
                  for (_i = 0, _len = l.length; _i < _len; _i++) {
                    x = l[_i];
                    _results.push(x.replace(/\"\"\"/g, '\"\"\"'));
                  }
                  return _results;
                })();
                l.unshift(ind + '"""');
                l.push(ind + '"""');
                return l.join(ind + "\n");
              } else {
                return ind + '"' + x.replace(/[\"\\]/g, function(x) {
                  return "\\" + x;
                }) + '"';
              }
            } else if (t === "function") {
              ni = ind + "  ";
              if (x.coffee != null) {
                s = x.coffee;
                if (depth === 1 || /\n/.test(s)) {
                  lines = s.split("\n");
                  if (lines.length > 1) {
                    if ((mn = lines[1].match(/^[ \t]+/)) != null) {
                      mn = mn[0].length;
                      id = mn - ni.length;
                      if (id > 0) {
                        x = new this.RegExp("[ \\t]{" + id + "}");
                        lines = (function() {
                          var _i, _len, _results;
                          _results = [];
                          for (_i = 0, _len = lines.length; _i < _len; _i++) {
                            line = lines[_i];
                            _results.push(line.replace(x, ""));
                          }
                          return _results;
                        })();
                      } else if (id < 0) {
                        ni = this.Array(-id + 1).join(" ");
                        lines = (function() {
                          var _i, _len, _results;
                          _results = [];
                          for (_i = 0, _len = lines.length; _i < _len; _i++) {
                            line = lines[_i];
                            _results.push(ni + line);
                          }
                          return _results;
                        })();
                      }
                    }
                  }
                  return lines.join("\n");
                } else {
                  return ind + "(" + s + ")";
                }
              } else {
                return ind + x.toString().replace(/\n/g, '\n' + ni);
              }
            } else if ((c = (function(p, c) {
              while (p != null) {
                if (p.x === x) {
                  return c;
                }
                p = p.prev;
                c++;
              }
              return 0;
            })(prev, 1))) {
              return "<cycle-" + c + "+" + (depth - c - 1) + ">";
            } else if (t !== "object") {
              return "<" + t + ">";
            } else if (this.Array.isArray(x)) {
              if (x.length === 0) {
                return "[ ]";
              } else {
                cl = 2;
                hasLines = false;
                xxxx = (function() {
                  var _i, _len, _results;
                  _results = [];
                  for (_i = 0, _len = x.length; _i < _len; _i++) {
                    xx = x[_i];
                    if (!this.newline()) {
                      break;
                    }
                    xx = print(xx);
                    if (/\n/.test(xx)) {
                      hasLines = true;
                    }
                    cl += 2 + xx.length;
                    _results.push(xx);
                  }
                  return _results;
                }).call(this);
                if (!hasLines && depth * 2 + cl + 1 < this.columns) {
                  return "[ " + xxxx.join(", ") + " ]";
                } else {
                  ni = ind + "  ";
                  l = [ind + "["];
                  for (_i = 0, _len = xxxx.length; _i < _len; _i++) {
                    xx = xxxx[_i];
                    l.push(ni + clean(xx).replace(/\n/g, '\n' + ni));
                  }
                  l.push(ind + "]");
                  return l.join("\n");
                }
              }
            } else if ((specialPrinted = this.printSpecialObject(x, ind)) != null) {
              return specialPrinted;
            } else {
              l = [];
              if ((((_ref = this.window) != null ? _ref.document : void 0) != null) && (x.id != null) && typeof x.id === "string" && x === this.window.document.getElementById(x.id)) {
                return "" + ind + "window.document.getElementById '" + (x.id.replace(/\'/, "\\'")) + "'";
              }
              if (this.symbolicPackages && depth > 1 && ((packageVersion = (_ref1 = x.pkgInfo) != null ? _ref1.version : void 0) != null)) {
                return ind + "dynmodArchive.load '" + packageVersion.replace(/\ .*/, "") + "'";
              }
              ind = "";
              if (x instanceof this.Date) {
                return "new Date(\"" + (x.toISOString()) + "\")";
              }
              keys = (function() {
                var _results;
                _results = [];
                for (k in x) {
                  _results.push(k);
                }
                return _results;
              })();
              if (keys.length === 0) {
                return "{ }";
              }
              if (!((prev == null) || typeof prev.x === "object" && !this.Array.isArray(prev.x))) {
                l = ["do->"];
                ind = "  ";
              }
              ni = ind + "  ";
              kvFilter = (_ref2 = this.filter) != null ? _ref2 : (function() {
                return true;
              });
              for (_j = 0, _len1 = keys.length; _j < _len1; _j++) {
                k = keys[_j];
                if (!this.newline()) {
                  break;
                }
                verr = null;
                try {
                  v = x[k];
                } catch (_error) {
                  error = _error;
                  verr = error.toString();
                }
                if (verr != null) {
                  if (!/^[Ee]rror:/.test(verr)) {
                    verr = "Error:" + verr;
                  }
                  l.push("" + ind + "# " + k + ": <" + verr + ">");
                } else if (!kvFilter(k, v)) {
                  l.push("" + ind + "# " + k + ": <" + (typeof v) + ">");
                } else if (this.global[k] === v) {
                  l.push("" + ind + k + ": " + this.globalName + "." + k);
                } else {
                  v = clean(print(v)).replace(/\n/g, '\n' + ni);
                  if (!/\n/.test(v) && ind.length + k.toString().length + 2 + v.length < this.columns) {
                    l.push(ind + k + ": " + v);
                  } else {
                    l.push(ind + k + ":");
                    l.push(ni + v);
                  }
                }
              }
              if (l.length) {
                return l.join("\n");
              } else {
                return "{ }";
              }
            }
          }
        }),
        printNumber: (function(x) {
          x.coffee = "(x)@> \"#{x}\"";
          return x;
        })(function(x) {
          return "" + x;
        })
      },
      htmlcup: {
        __proto__: {
          pkgInfo: {
            version: "HtmlCup 0.2.1",
            title: "HTML-generating lingo",
            copyright: "Copyright (c) 2013,2014 Michele Bini",
            notes: "This is a port of htmlcup as a dynmod package",
            license: "GPL3"
          },
          quoteTagText: (function(x) {
            x.coffee = "(str) @>\n            str.replace /[&<]/g, (c) ->\n              if c is '<' then '&lt;' else '&amp;'\n        ";
            return x;
          })(function(str) {
            return str.replace(/[&<]/g, function(c) {
              if (c === '<') {
                return '&lt;';
              } else {
                return '&amp;';
              }
            });
          }),
          quoteText: (function(x) {
            x.coffee = "(str) @>\n            str.replace /[&<\"]/g, (c) ->              # \"\n              if c is '<' then '&lt;'\n              else if c is '&'\n              then '&amp;'\n              else '&quot;'\n        ";
            return x;
          })(function(str) {
            return str.replace(/[&<"]/g, function(c) {
              if (c === '<') {
                return '&lt;';
              } else if (c === '&') {
                return '&amp;';
              } else {
                return '&quot;';
              }
            });
          }),
          docType: (function(x) {
            x.coffee = "@> @printHtml \"<!DOCTYPE html>\\n\"";
            return x;
          })(function() {
            return this.printHtml("<!DOCTYPE html>\n");
          }),
          voidElements: (function(x) {
            x.coffee = "@>\n            # References:\n            #  http://www.w3.org/TR/html5/syntax.html\n            #  http://www.w3.org/TR/html-markup/elements.html\n            \"area, base, br, col, command, embed, hr, img, input, keygen, link, meta, param, source, track, wbr\"\n        ";
            return x;
          })(function() {
            return "area, base, br, col, command, embed, hr, img, input, keygen, link, meta, param, source, track, wbr";
          }),
          foreignElements: (function(x) {
            x.coffee = "@> 'math, svg'";
            return x;
          })(function() {
            return 'math, svg';
          }),
          rawTextElements: (function(x) {
            x.coffee = "@> 'script, style'";
            return x;
          })(function() {
            return 'script, style';
          }),
          allElements: (function(x) {
            x.coffee = "@>\n          \"\"\"\n          a, abbr, address, area, article, aside, audio, b, base, bdi, bdo,\n          blockquote, body, br, button, button, button, button, canvas, caption,\n          cite, code, col, colgroup, command, command, command, command,\n          datalist, dd, del, details, dfn, div, dl, dt, em, embed, fieldset,\n          figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, head,\n          header, hgroup, hr, html, i, iframe, img, input, ins, kbd, keygen,\n          label, legend, li, link, map, mark, menu, meta, meta, meta, meta,\n          meta, meta, meter, nav, noscript, object, ol, optgroup, option,\n          output, p, param, pre, progress, q, rp, rt, ruby, s, samp, script,\n          section, select, small, source, span, strong, style, sub, summary,\n          sup, table, tbody, td, textarea, tfoot, th, thead, time, title, tr,\n          track, u, ul, var, video, wbr\n          \"\"\"\n        ";
            return x;
          })(function() {
            return "a, abbr, address, area, article, aside, audio, b, base, bdi, bdo,\nblockquote, body, br, button, button, button, button, canvas, caption,\ncite, code, col, colgroup, command, command, command, command,\ndatalist, dd, del, details, dfn, div, dl, dt, em, embed, fieldset,\nfigcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, head,\nheader, hgroup, hr, html, i, iframe, img, input, ins, kbd, keygen,\nlabel, legend, li, link, map, mark, menu, meta, meta, meta, meta,\nmeta, meta, meter, nav, noscript, object, ol, optgroup, option,\noutput, p, param, pre, progress, q, rp, rt, ruby, s, samp, script,\nsection, select, small, source, span, strong, style, sub, summary,\nsup, table, tbody, td, textarea, tfoot, th, thead, time, title, tr,\ntrack, u, ul, var, video, wbr";
          }),
          compileTag: (function(x) {
            x.coffee = "(tagName, isVoid, isRawText) @> (args...) ->\n            @printHtml \"<#{tagName}\"\n            for arg in args\n              if typeof arg is 'function'\n                f = arg\n                break\n              if typeof arg is 'string'\n                s = arg\n                break\n              for x,y of arg\n                if y?\n                  @printHtml \" #{x}=\\\"#{@quoteText y}\\\"\"\n                else\n                  @printHtml \" #{x}\"\n            @printHtml '>'\n            return if isVoid\n            f.apply @     if f\n            if s\n              if isRawText\n                @printHtml s\n              else\n                @printHtml @quoteTagText s\n            @printHtml '</' + tagName + '>'\n        ";
            return x;
          })(function(tagName, isVoid, isRawText) {
            var __slice = [].slice;
            return function() {
              var arg, args, f, s, x, y, _i, _len;
              args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
              this.printHtml("<" + tagName);
              for (_i = 0, _len = args.length; _i < _len; _i++) {
                arg = args[_i];
                if (typeof arg === 'function') {
                  f = arg;
                  break;
                }
                if (typeof arg === 'string') {
                  s = arg;
                  break;
                }
                for (x in arg) {
                  y = arg[x];
                  if (y != null) {
                    this.printHtml(" " + x + "=\"" + (this.quoteText(y)) + "\"");
                  } else {
                    this.printHtml(" " + x);
                  }
                }
              }
              this.printHtml('>');
              if (isVoid) {
                return;
              }
              if (f) {
                f.apply(this);
              }
              if (s) {
                if (isRawText) {
                  this.printHtml(s);
                } else {
                  this.printHtml(this.quoteTagText(s));
                }
              }
              return this.printHtml('</' + tagName + '>');
            };
          }),
          compileLib: (function(x) {
            x.coffee = "@>\n            isArray = [].constructor.isArray\n            makeset = (l) ->\n              if typeof l is 'function'\n                l = l.call @\n              if typeof l is 'string'\n                l = l.split \",\"\n              if isArray l\n                r = { }\n                for x in l\n                  x = x.replace(/[^a-z0-9]+/g, \"\")\n                  r[x] = 1\n                return r\n              else\n                return l\n            h = __proto__: @\n            if @voidElements is 'function'\n              h.sourceFunctions = { @voidElements, @rawTextElements, @allElements }\n            h.voidElements = makeset @voidElements\n            h.rawTextElements = makeset @rawTextElements\n            h.allElements = makeset @allElements\n            h[x] = @compileTag(x, ((h.voidElements[x])?), ((h.rawTextElements[x])?)) for x of h.allElements\n            h\n        ";
            return x;
          })(function() {
            var h, isArray, makeset, x;
            isArray = [].constructor.isArray;
            makeset = function(l) {
              var r, x, _i, _len;
              if (typeof l === 'function') {
                l = l.call(this);
              }
              if (typeof l === 'string') {
                l = l.split(",");
              }
              if (isArray(l)) {
                r = {};
                for (_i = 0, _len = l.length; _i < _len; _i++) {
                  x = l[_i];
                  x = x.replace(/[^a-z0-9]+/g, "");
                  r[x] = 1;
                }
                return r;
              } else {
                return l;
              }
            };
            h = {
              __proto__: this
            };
            if (this.voidElements === 'function') {
              h.sourceFunctions = {
                voidElements: this.voidElements,
                rawTextElements: this.rawTextElements,
                allElements: this.allElements
              };
            }
            h.voidElements = makeset(this.voidElements);
            h.rawTextElements = makeset(this.rawTextElements);
            h.allElements = makeset(this.allElements);
            for (x in h.allElements) {
              h[x] = this.compileTag(x, (h.voidElements[x] != null), (h.rawTextElements[x] != null));
            }
            return h;
          }),
          pkgExpand: (function(x) {
            x.coffee = "@> @compileLib()";
            return x;
          })(function() {
            return this.compileLib();
          }),
          modRecmopile: (function(x) {
            x.coffee = "@> @compileLib()";
            return x;
          })(function() {
            return this.compileLib();
          }),
          pkgCompress: (function(x) {
            x.coffee = "@>\n            isArray = [].constructor.isArray\n            h = @sourceFunctions or { }\n            h = @modMixin.call h, @\n            h = @modStrip.call h, @allElements\n            h\n        ";
            return x;
          })(function() {
            var h, isArray;
            isArray = [].constructor.isArray;
            h = this.sourceFunctions || {};
            h = this.modMixin.call(h, this);
            h = this.modStrip.call(h, this.allElements);
            return h;
          }),
          html5Page: (function(x) {
            x.coffee = "(args...) @>\n            @docType 5\n            @html.apply @, args\n      ";
            return x;
          })(function() {
            var args,
              __slice = [].slice;
            args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
            this.docType(5);
            return this.html.apply(this, args);
          })
        },
        capturedTokens: [],
        printHtml: (function(x) {
          x.coffee = "(t)@> @capturedTokens.push t";
          return x;
        })(function(t) {
          return this.capturedTokens.push(t);
        }),
        captureHtml: (function(x) {
          x.coffee = "(f)@>\n        o = @capturedTokens\n        @capturedTokens = []\n        f.apply @\n        p = @capturedTokens\n        @capturedTokens = o\n        r = p.join \"\"\n        @printHtml r\n        r\n      ";
          return x;
        })(function(f) {
          var o, p, r;
          o = this.capturedTokens;
          this.capturedTokens = [];
          f.apply(this);
          p = this.capturedTokens;
          this.capturedTokens = o;
          r = p.join("");
          this.printHtml(r);
          return r;
        }),
        namedObjects: {
          document: document
        },
        captureFirstTag: (function(x) {
          x.coffee = "(f)@>\n        { document } = @namedObjects\n        div = document.createElement \"div\"\n        div.innerHTML = @captureHtml f\n        div.firstChild\n      ";
          return x;
        })(function(f) {
          var div, document;
          document = this.namedObjects.document;
          div = document.createElement("div");
          div.innerHTML = this.captureHtml(f);
          return div.firstChild;
        }),
        stripOuter: (function(x) {
          x.coffee = "(x)@>\n        x.replace(/^<[^>]*>/, \"\").replace(/<[^>]*>$/, \"\")\n      ";
          return x;
        })(function(x) {
          return x.replace(/^<[^>]*>/, "").replace(/<[^>]*>$/, "");
        }),
        capturedParts: {},
        capturePart: (function(x) {
          x.coffee = "(tagName, stripOuter = @stripOuter)@> ->\n        x = arguments\n        @capturedParts[tagName] =\n          stripOuter (@captureHtml ->\n            @originalLib[tagName].apply @, x\n          )\n      ";
          return x;
        })(function(tagName, stripOuter) {
          if (stripOuter == null) {
            stripOuter = this.stripOuter;
          }
          return function() {
            var x;
            x = arguments;
            return this.capturedParts[tagName] = stripOuter(this.captureHtml(function() {
              return this.originalLib[tagName].apply(this, x);
            }));
          };
        }),
        body: (function(x) {
          x.coffee = "@> (@capturePart \"body\").apply @, arguments";
          return x;
        })(function() {
          return (this.capturePart("body")).apply(this, arguments);
        }),
        head: (function(x) {
          x.coffee = "@>\n        lib = @.extendObject\n          title: -> (@capturePart \"title\").apply @, arguments\n          headStyles: []\n          style: ->\n            @headStyles.push (@capturePart \"style\").apply @, arguments\n        r = (lib.capturePart \"head\").apply lib, arguments\n        @capturedParts.headStyles = lib.headStyles\n        @capturedParts.headTitle = lib.capturedParts.title\n        r\n      # script: ->\n      #  scripts = (@capturedParts.scripts or= [])\n      #  push scripts, ((@capturePart \"script\").apply @, arguments)\n      ";
          return x;
        })(function() {
          var lib, r;
          lib = this.extendObject({
            title: function() {
              return (this.capturePart("title")).apply(this, arguments);
            },
            headStyles: [],
            style: function() {
              return this.headStyles.push((this.capturePart("style")).apply(this, arguments));
            }
          });
          r = (lib.capturePart("head")).apply(lib, arguments);
          this.capturedParts.headStyles = lib.headStyles;
          this.capturedParts.headTitle = lib.capturedParts.title;
          return r;
        }),
        html5Page: (function(x) {
          x.coffee = "@>\n        x = arguments\n        @captureHtml -> @originalLib.html5Page.apply @, x\n        r = @capturedParts\n        @capturedParts = {}\n        r\n    ";
          return x;
        })(function() {
          var r, x;
          x = arguments;
          this.captureHtml(function() {
            return this.originalLib.html5Page.apply(this, x);
          });
          r = this.capturedParts;
          this.capturedParts = {};
          return r;
        })
      },
      aceRefcoffeeMode: {
        setup: (function(x) {
          x.coffee = "({ace, console, CoffeeScript})@>\n                ace.define \"ace/mode/refcoffee_highlight_rules\", [\n                  \"require\"\n                  \"exports\"\n                  \"module\"\n                  \"ace/mode/coffee_highlight_rules\"\n                ], (req, exports, module)->\n                  RefcoffeeHighlightRules = ->\n                    @$rules.start = [\n                        {\n                          stateName: \"litdoc\"\n                          token: \"string\"\n                          regex: \"''''\"\n                        }\n                    ].concat @$rules.start\n    \n                    @$rules.start = for x in @$rules.start\n                      if x?.regex? and typeof x.regex is 'string'\n                        x.regex = x.regex.replace /\\[\\\\-=\\]>/, \"[\\\\-=@]>\"\n                      x\n                    \n                    @normalizeRules()\n                    return\n                  \"use strict\"\n                  makeClass = (p)-> c = p.constructor; c:: = p; c\n                  CoffeeHighlightRules = req(\"./coffee_highlight_rules\").CoffeeHighlightRules\n                  exports.RefcoffeeHighlightRules = makeClass\n                    constructor: ->\n                      CoffeeHighlightRules.call @\n                      RefcoffeeHighlightRules.call @\n                      return\n                    __proto__: CoffeeHighlightRules::\n                  return\n                  \n                ace.define \"ace/mode/refcoffee\", [\n                  \"require\"\n                  \"exports\"\n                  \"module\"\n                  \"ace/mode/coffee\"\n                  \"ace/mode/refcoffee_highlight_rules\"\n                ], (req, exports, module)->\n                  WorkerClient = undefined\n                  CoffeeMode = req(\"ace/mode/coffee\").Mode\n                  makeClass = (p)-> c = p.constructor; c:: = p; c\n                  Rules = req(\"./refcoffee_highlight_rules\").RefcoffeeHighlightRules\n                  Mode = makeClass\n                    __proto__: CoffeeMode::\n                    constructor: ->\n                      CoffeeMode.call @\n                      @HighlightRules = Rules\n                      # @$outdent = new Outdent()\n                      # @foldingRules = new FoldMode()\n                      return\n                  \"use strict\"\n                  (->\n                    @$id = \"ace/mode/refcoffee\"\n                    @createWorker = (session)-> null\n                    return\n                  ).call Mode::\n                  exports.Mode = Mode\n                  return\n  ";
          return x;
        })(function(_arg) {
          var CoffeeScript, ace, console;
          ace = _arg.ace, console = _arg.console, CoffeeScript = _arg.CoffeeScript;
          ace.define("ace/mode/refcoffee_highlight_rules", ["require", "exports", "module", "ace/mode/coffee_highlight_rules"], function(req, exports, module) {
            var CoffeeHighlightRules, RefcoffeeHighlightRules, makeClass;
            RefcoffeeHighlightRules = function() {
              var x;
              this.$rules.start = [
                {
                  stateName: "litdoc",
                  token: "string",
                  regex: "''''"
                }
              ].concat(this.$rules.start);
              this.$rules.start = (function() {
                var _i, _len, _ref, _results;
                _ref = this.$rules.start;
                _results = [];
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  x = _ref[_i];
                  if (((x != null ? x.regex : void 0) != null) && typeof x.regex === 'string') {
                    x.regex = x.regex.replace(/\[\\-=\]>/, "[\\-=@]>");
                  }
                  _results.push(x);
                }
                return _results;
              }).call(this);
              this.normalizeRules();
            };
            "use strict";
            makeClass = function(p) {
              var c;
              c = p.constructor;
              c.prototype = p;
              return c;
            };
            CoffeeHighlightRules = req("./coffee_highlight_rules").CoffeeHighlightRules;
            exports.RefcoffeeHighlightRules = makeClass({
              constructor: function() {
                CoffeeHighlightRules.call(this);
                RefcoffeeHighlightRules.call(this);
              },
              __proto__: CoffeeHighlightRules.prototype
            });
          });
          return ace.define("ace/mode/refcoffee", ["require", "exports", "module", "ace/mode/coffee", "ace/mode/refcoffee_highlight_rules"], function(req, exports, module) {
            var CoffeeMode, Mode, Rules, WorkerClient, makeClass;
            WorkerClient = void 0;
            CoffeeMode = req("ace/mode/coffee").Mode;
            makeClass = function(p) {
              var c;
              c = p.constructor;
              c.prototype = p;
              return c;
            };
            Rules = req("./refcoffee_highlight_rules").RefcoffeeHighlightRules;
            Mode = makeClass({
              __proto__: CoffeeMode.prototype,
              constructor: function() {
                CoffeeMode.call(this);
                this.HighlightRules = Rules;
              }
            });
            "use strict";
            (function() {
              this.$id = "ace/mode/refcoffee";
              this.createWorker = function(session) {
                return null;
              };
            }).call(Mode.prototype);
            exports.Mode = Mode;
          });
        })
      }
    },
    assert: (function(x) {
      x.coffee = "(c, msg)@> { alert } = @lib; alert msg unless c";
      return x;
    })(function(c, msg) {
      var alert;
      alert = this.lib.alert;
      if (!c) {
        return alert(msg);
      }
    }),
    jsLoad: (function(x) {
      x.coffee = "(sym, src, callback)@>\n    charnia = @\n    { window, document, deleteNode } = @lib\n    if sym and window[sym]?\n      callback() if callback?\n      return\n    # Intercept script request\n    (window.embeddedScriptsRequested ?= []).push src\n    if (code = window.embeddedScripts?[src])?\n      setTimeout <. window\n      ((x)-> setTimeout x, 0) ()->\n        window.eval code\n        callback() if callback\n      return\n    alert <. window\n    alert \"Internal error: script to preload: #{src}\"\n    (window.missingScripts ?= []).push src\n    return\n    x = document.createElement('script')\n    x.type = 'text/javascript'\n    x.src = src\n    y = 1\n    x.onload = x.onreadystatechange = ()->\n      charnia.assert(window[sym]?, \"Symbol #{sym} was not defined after loading library\") if sym\n      if y and not @readyState or @readyState is 'complete'\n        y = 0\n        deleteNode x\n        callback() if callback\n    document.getElementsByTagName('head')[0].appendChild x\n    \n  ";
      return x;
    })(function(sym, src, callback) {
      var alert, charnia, code, deleteNode, document, setTimeout, window, x, y, _ref, _ref1;
      charnia = this;
      _ref = this.lib, window = _ref.window, document = _ref.document, deleteNode = _ref.deleteNode;
      if (sym && (window[sym] != null)) {
        if (callback != null) {
          callback();
        }
        return;
      }
      (window.embeddedScriptsRequested != null ? window.embeddedScriptsRequested : window.embeddedScriptsRequested = []).push(src);
      if ((code = (_ref1 = window.embeddedScripts) != null ? _ref1[src] : void 0) != null) {
        setTimeout = window.setTimeout;
        (function(x) {
          return setTimeout(x, 0);
        })(function() {
          window["eval"](code);
          if (callback) {
            return callback();
          }
        });
        return;
      }
      alert = window.alert;
      alert("Internal error: script to preload: " + src);
      (window.missingScripts != null ? window.missingScripts : window.missingScripts = []).push(src);
      return;
      x = document.createElement('script');
      x.type = 'text/javascript';
      x.src = src;
      y = 1;
      x.onload = x.onreadystatechange = function() {
        if (sym) {
          charnia.assert(window[sym] != null, "Symbol " + sym + " was not defined after loading library");
        }
        if (y && !this.readyState || this.readyState === 'complete') {
          y = 0;
          deleteNode(x);
          if (callback) {
            return callback();
          }
        }
      };
      return document.getElementsByTagName('head')[0].appendChild(x);
    }),
    aceUrl: "https://github.com/ajaxorg/ace-builds/raw/master/src-min-noconflict/ace.js",
    htmlGizmo: {
      coffeecharniaLayout: (function(x) {
        x.coffee = "({ cssClass, header, body, footer, minheight, minwidth, style, innerStyle, htmlcup })@>\n        # return @div \"foobar\"\n          # This seems rather complex, but it appears to be the simplest effective way to get what I want, flex isn't working as expected\n        # @printHtml \"<!DOCTYPE html>\\n\"\n        htmlcup.div class:cssClass, style:\"#{style}\", ->\n          @div style:\"height:100%;display:table;width:100%;max-width:100%;table-layout:fixed\", ->\n              innerStyle? then @style innerStyle\n              if false\n                header.call @, style:\"display:table-row;min-height:1em;overflow:auto;max-height:5em\", class:\"consoleHeader\"\n              else if false\n                @div style:\"display:table-row;min-height:1em;background:pink\", ->\n                  @div style:\"max-height:5em;overflow-y:scroll;overflow-x:hidden;position:relative;display:block\", ->\n                    @div style:\"float:left;width:100%\", contentEditable:\"true\", ->\n                      @div \"x\" for x in [ 0 .. 25 ]\n              else\n                @div style:\"display:table-row;min-height:1em\", ->\n                  @div style:\"max-height:5em;overflow:hidden;position:relative;display:block\", ->\n                    @div style:\"float:left;width:100%\", ->\n                      header?.call @, class:\"consoleHeader\"\n              if false then @div style:\"position:relative;height:100%;overflow:hidden;display:table-row\", ->\n                @div style:\"position:relative;width:100%;height:100%;min-height:#{minheight}\", ->\n                  @div style:\"position:absolute;top:0;right:0;left:0;bottom:0;overflow:auto\", ->\n                    # x (container width)  y (contained width)\n                    \n                    # 2000 px              2000 px\n                    # 1500 px              1500 px\n                    # 1000 px              1000 px\n                    # 800 px               1000 px\n                    # 500 px               1000 px\n                    # 300 px               600 px\n                    # 200 px               400 px\n                    # 150 px               300 px\n                    # 100 px               200 px\n                    \n                    # y = ((x * 2) ^ 1000 px) _ x\n                    #      min-width width     max-width\n                    # This part does not seem to work on my firefox\n                    @div style:\"width:200%;max-width:50em;min-width:100%;height:100%;overflow:hidden\", ->\n                      @div style:\"position:relative;width:100%;height:100%;display:table\", ->\n                      # @div style:\"position:relative;width:100%;max-width:100%;height:100%;overflow:auto\", ->\n                      #  @div style:\"position:absolute;top:0;right:0;left:0;bottom:0;overflow:auto\", ->\n                      #    @div style:\"position:relative;max-width:200%;min-width:60em;display:table;background:black\", ->\n                        body.call @\n              else @div style:\"position:relative;height:100%;overflow:hidden;display:table-row\", ->\n                  @div style:\"position:relative;width:100%;height:100%;min-height:#{minheight}\", ->\n                      @div style:\"position:absolute;top:0;right:0;left:0;bottom:0;overflow:auto\", ->\n                          body.call @\n                #\n              footer.call @, style:\"display:table-row\"\n      ";
        return x;
      })(function(_arg) {
        var body, cssClass, footer, header, htmlcup, innerStyle, minheight, minwidth, style;
        cssClass = _arg.cssClass, header = _arg.header, body = _arg.body, footer = _arg.footer, minheight = _arg.minheight, minwidth = _arg.minwidth, style = _arg.style, innerStyle = _arg.innerStyle, htmlcup = _arg.htmlcup;
        return htmlcup.div({
          "class": cssClass,
          style: "" + style
        }, function() {
          return this.div({
            style: "height:100%;display:table;width:100%;max-width:100%;table-layout:fixed"
          }, function() {
            if (innerStyle != null) {
              this.style(innerStyle);
            }
            if (false) {
              header.call(this, {
                style: "display:table-row;min-height:1em;overflow:auto;max-height:5em",
                "class": "consoleHeader"
              });
            } else if (false) {
              this.div({
                style: "display:table-row;min-height:1em;background:pink"
              }, function() {
                return this.div({
                  style: "max-height:5em;overflow-y:scroll;overflow-x:hidden;position:relative;display:block"
                }, function() {
                  return this.div({
                    style: "float:left;width:100%",
                    contentEditable: "true"
                  }, function() {
                    var x, _i, _results;
                    _results = [];
                    for (x = _i = 0; _i <= 25; x = ++_i) {
                      _results.push(this.div("x"));
                    }
                    return _results;
                  });
                });
              });
            } else {
              this.div({
                style: "display:table-row;min-height:1em"
              }, function() {
                return this.div({
                  style: "max-height:5em;overflow:hidden;position:relative;display:block"
                }, function() {
                  return this.div({
                    style: "float:left;width:100%"
                  }, function() {
                    return header != null ? header.call(this, {
                      "class": "consoleHeader"
                    }) : void 0;
                  });
                });
              });
            }
            if (false) {
              this.div({
                style: "position:relative;height:100%;overflow:hidden;display:table-row"
              }, function() {
                return this.div({
                  style: "position:relative;width:100%;height:100%;min-height:" + minheight
                }, function() {
                  return this.div({
                    style: "position:absolute;top:0;right:0;left:0;bottom:0;overflow:auto"
                  }, function() {
                    return this.div({
                      style: "width:200%;max-width:50em;min-width:100%;height:100%;overflow:hidden"
                    }, function() {
                      return this.div({
                        style: "position:relative;width:100%;height:100%;display:table"
                      }, function() {
                        return body.call(this);
                      });
                    });
                  });
                });
              });
            } else {
              this.div({
                style: "position:relative;height:100%;overflow:hidden;display:table-row"
              }, function() {
                return this.div({
                  style: "position:relative;width:100%;height:100%;min-height:" + minheight
                }, function() {
                  return this.div({
                    style: "position:absolute;top:0;right:0;left:0;bottom:0;overflow:auto"
                  }, function() {
                    return body.call(this);
                  });
                });
              });
            }
            return footer.call(this, {
              style: "display:table-row"
            });
          });
        });
      }),
      cssPrefix: "coffeecharnia_",
      make: (function(x) {
        x.coffee = "(withHtmlcup, { controller, text })@>\n        cssClass = (name)=> @cssClass name\n        homeEvent = (name)=> @homeEvent name\n        containerClass = cssClass 'container'\n        i = @\n        withHtmlcup.call @, -> i.coffeecharniaLayout\n          cssClass: containerClass\n          htmlcup: @\n          style: controller.getInlineStyle()\n          innerStyle:\n            \"\"\"\n            .#{containerClass} pre { background:none; color:inherit; }\n            .#{containerClass} div, .#{containerClass} pre { padding: 0; margin:0; }\n            .#{containerClass} a { color: #ffb }\n            .#{containerClass} a:visited { color: #eec }\n            .#{containerClass} a:hover { color: white }\n            \"\"\"\n          minheight: \"70%\",\n          minwidth: \"60em\",\n          head: ->\n            @meta charset:\"utf-8\"\n            @style \"\"\"\n              .#{containerClass} { background:black; color: #ddd; }\n              .#{containerClass} a { color:#5af; }\n              .#{containerClass} a:visited { color:#49f; }\n              .#{containerClass} a:hover { color:#6cf; }\n              .#{containerClass} select, textarea { border: 1px solid #555; }\n              \"\"\"\n          header: (opts)->\n            @style \"\"\"\n                div.thisHeader, .thisHeader div { text-align:center; }\n                \"\"\"\n            @div opts, ->\n              @style \"\"\"\n                /* .#{containerClass} select { min-width:5em; max-width:30%; width:18em; } */\n                .#{containerClass} select, .#{containerClass} button { font-size:inherit; text-align:center;   }\n                .#{containerClass} .button { display:inline-block; }\n                .#{containerClass} button, .#{containerClass} .button, .#{containerClass} input, .#{containerClass} select:not(:focus):not(:hover) { color:white; background:black; }\n                /* select option:not(:checked) { color:red !important; background:black !important; } */\n                /* option:active, option[selected], option:checked, option:hover, option:focus { background:#248 !important; } */\n                .#{containerClass} button, .#{containerClass} .button { min-width:5%; font-size:220%; border: 2px outset grey; }\n                .#{containerClass} button:active, .#{containerClass} .button.button-on { border: 2px inset grey; background:#248; }\n                .#{containerClass} .button input[type=\"checkbox\"] { display:none; }\n                .#{containerClass} .arrow { font-weight:bold;  }\n                .#{containerClass} .editArea { height:100%;width:100%;box-sizing:border-box; }\n                \"\"\"\n          body: (opts)->\n              @style \"\"\"\n                .#{containerClass} textarea { background: black; color: #ddd; }\n                .#{containerClass} button { opacity: 0.22; }\n                .#{containerClass} button:hover, .#{containerClass} button:focus, .#{containerClass} button:active { opacity: 1; }\n                \"\"\"\n              @div style:\"font-size:12px;position:absolute;top:0;right:0;left:0;bottom:0;overflow:hidden\", ->\n                  px = 44;\n                  w = \"width:#{px}px;max-width:#{px}px;min-width:#{px}px\"\n                  i = 1\n                  @button class:cssClass(\"runButton\"),      style:\"#{w};right:0;top:0;position:absolute;z-index:1000000\", \"▶\"\n                  @button class:cssClass(\"enlargeButton\"),  style:\"#{w};right:#{px*(i++)}px;top:0;position:absolute;z-index:1000000\", \"⬜\"\n                  @button class:cssClass(\"dragButton\"),     style:\"#{w};right:#{px*(i++)}px;top:0;position:absolute;z-index:1000000\", \"⛶\"\n                  @button class:cssClass(\"shrinkButton\"),   style:\"#{w};right:#{px*(i++)}px;top:0;position:absolute;z-index:1000000\", \"▫\"\n                  @button class:cssClass(\"killButton\"),     style:\"#{w};right:#{px*(i++)}px;top:0;position:absolute;z-index:1000000\", \"⨯\"\n                  @textarea class:\"#{cssClass(\"coffeeArea\")} editArea\", (text ? \"# Welcome to CoffeeCharnia!\")\n                  ####\n                    # Press return twice after a statement to execute it!\n        \n                    \n          footer: (opts)->\n            @style \"\"\"\n              .#{containerClass} div.#{cssClass 'thisFooter'}, .#{containerClass} .#{cssClass 'thisFooter'} div { text-align:center; }\n              \"\"\"\n            @div class:cssClass('thisFooter'), opts, ->\n              @style \"\"\"\n                .#{containerClass} div.#{cssClass 'thisFooter'} div.#{cssClass 'resultFooter'} {\n                  /* overflow:auto; */\n                  vertical-align: middle;\n                }\n                .#{containerClass} div.#{cssClass 'thisFooter'} div.#{cssClass 'resultDatum'} {\n                  text-align:initial;\n                  vertical-align:initial;\n                  display:inline-block;\n                }\n                \"\"\"\n              @div class:cssClass(\"resultFooter\"), style:\"display:none\", ->\n                @div class:cssClass(\"resultDatum\"), ->\n              @div class:cssClass(\"introFooter\"), ->\n                @b controller.pkgInfo.version\n                @span ->\n                  @span \": \"\n                  @i \"A Reflective Coffescript Console/Editor!\"\n                @printHtml \" &bull; \"\n                @a href:\"https://github.com/rev22/reflective-coffeescript\", \"Reflective Coffeescript\"\n      ";
        return x;
      })(function(withHtmlcup, _arg) {
        var containerClass, controller, cssClass, homeEvent, i, text;
        controller = _arg.controller, text = _arg.text;
        cssClass = (function(_this) {
          return function(name) {
            return _this.cssClass(name);
          };
        })(this);
        homeEvent = (function(_this) {
          return function(name) {
            return _this.homeEvent(name);
          };
        })(this);
        containerClass = cssClass('container');
        i = this;
        return withHtmlcup.call(this, function() {
          return i.coffeecharniaLayout({
            cssClass: containerClass,
            htmlcup: this,
            style: controller.getInlineStyle(),
            innerStyle: "." + containerClass + " pre { background:none; color:inherit; }\n." + containerClass + " div, ." + containerClass + " pre { padding: 0; margin:0; }\n." + containerClass + " a { color: #ffb }\n." + containerClass + " a:visited { color: #eec }\n." + containerClass + " a:hover { color: white }",
            minheight: "70%",
            minwidth: "60em",
            head: function() {
              this.meta({
                charset: "utf-8"
              });
              return this.style("." + containerClass + " { background:black; color: #ddd; }\n." + containerClass + " a { color:#5af; }\n." + containerClass + " a:visited { color:#49f; }\n." + containerClass + " a:hover { color:#6cf; }\n." + containerClass + " select, textarea { border: 1px solid #555; }");
            },
            header: function(opts) {
              this.style("div.thisHeader, .thisHeader div { text-align:center; }");
              return this.div(opts, function() {
                return this.style("/* ." + containerClass + " select { min-width:5em; max-width:30%; width:18em; } */\n." + containerClass + " select, ." + containerClass + " button { font-size:inherit; text-align:center;   }\n." + containerClass + " .button { display:inline-block; }\n." + containerClass + " button, ." + containerClass + " .button, ." + containerClass + " input, ." + containerClass + " select:not(:focus):not(:hover) { color:white; background:black; }\n/* select option:not(:checked) { color:red !important; background:black !important; } */\n/* option:active, option[selected], option:checked, option:hover, option:focus { background:#248 !important; } */\n." + containerClass + " button, ." + containerClass + " .button { min-width:5%; font-size:220%; border: 2px outset grey; }\n." + containerClass + " button:active, ." + containerClass + " .button.button-on { border: 2px inset grey; background:#248; }\n." + containerClass + " .button input[type=\"checkbox\"] { display:none; }\n." + containerClass + " .arrow { font-weight:bold;  }\n." + containerClass + " .editArea { height:100%;width:100%;box-sizing:border-box; }");
              });
            },
            body: function(opts) {
              this.style("." + containerClass + " textarea { background: black; color: #ddd; }\n." + containerClass + " button { opacity: 0.22; }\n." + containerClass + " button:hover, ." + containerClass + " button:focus, ." + containerClass + " button:active { opacity: 1; }");
              return this.div({
                style: "font-size:12px;position:absolute;top:0;right:0;left:0;bottom:0;overflow:hidden"
              }, function() {
                var px, w;
                px = 44;
                w = "width:" + px + "px;max-width:" + px + "px;min-width:" + px + "px";
                i = 1;
                this.button({
                  "class": cssClass("runButton"),
                  style: "" + w + ";right:0;top:0;position:absolute;z-index:1000000"
                }, "▶");
                this.button({
                  "class": cssClass("enlargeButton"),
                  style: "" + w + ";right:" + (px * (i++)) + "px;top:0;position:absolute;z-index:1000000"
                }, "⬜");
                this.button({
                  "class": cssClass("dragButton"),
                  style: "" + w + ";right:" + (px * (i++)) + "px;top:0;position:absolute;z-index:1000000"
                }, "⛶");
                this.button({
                  "class": cssClass("shrinkButton"),
                  style: "" + w + ";right:" + (px * (i++)) + "px;top:0;position:absolute;z-index:1000000"
                }, "▫");
                this.button({
                  "class": cssClass("killButton"),
                  style: "" + w + ";right:" + (px * (i++)) + "px;top:0;position:absolute;z-index:1000000"
                }, "⨯");
                return this.textarea({
                  "class": "" + (cssClass("coffeeArea")) + " editArea"
                }, text != null ? text : "# Welcome to CoffeeCharnia!");
              });
            },
            footer: function(opts) {
              this.style("." + containerClass + " div." + (cssClass('thisFooter')) + ", ." + containerClass + " ." + (cssClass('thisFooter')) + " div { text-align:center; }");
              return this.div({
                "class": cssClass('thisFooter')
              }, opts, function() {
                this.style("." + containerClass + " div." + (cssClass('thisFooter')) + " div." + (cssClass('resultFooter')) + " {\n  /* overflow:auto; */\n  vertical-align: middle;\n}\n." + containerClass + " div." + (cssClass('thisFooter')) + " div." + (cssClass('resultDatum')) + " {\n  text-align:initial;\n  vertical-align:initial;\n  display:inline-block;\n}");
                this.div({
                  "class": cssClass("resultFooter"),
                  style: "display:none"
                }, function() {
                  return this.div({
                    "class": cssClass("resultDatum")
                  }, function() {});
                });
                return this.div({
                  "class": cssClass("introFooter")
                }, function() {
                  this.b(controller.pkgInfo.version);
                  this.span(function() {
                    this.span(": ");
                    return this.i("A Reflective Coffescript Console/Editor!");
                  });
                  this.printHtml(" &bull; ");
                  return this.a({
                    href: "https://github.com/rev22/reflective-coffeescript"
                  }, "Reflective Coffeescript");
                });
              });
            }
          });
        });
      }),
      __proto__: HtmlGizmo
    },
    global: window["eval"]('window'),
    window: window,
    spawn: (function(x) {
      x.coffee = "(opts)@>\n    { target, text, cb } = opts if opts?\n    charnia = (@view then @__proto__ else @)\n    { coffeescriptUrl } = @config\n    { aceUrl, htmlGizmo } = @\n    { document, window, DynmodPrinter, Error, camelcapBookmarklet, htmlcup, aceRefcoffeeMode } = @lib\n    htmlcup = htmlcup.compileLib()\n  \n    element = (htmlGizmo = __proto__: htmlGizmo).make ((x)-> @element = htmlcup.captureFirstTag x), { controller: charnia, text }\n    \n    document.body.appendChild element\n    \n    withAce = (cb)-> charnia.jsLoad 'ace', aceUrl, cb\n    withCoffee = (cb)-> charnia.jsLoad 'CoffeeScript', coffeescriptUrl, cb\n    withCoffee ->\n      \n      app =\n        target: target\n      \n        libs:\n          CoffeeScript: window.CoffeeScript\n          aceRefcoffeeMode: aceRefcoffeeMode\n          # ace: window.ace\n        \n        eval: window.eval\n        setTimeout: window.setTimeout\n        getInputSelection: window.getInputSelection\n    \n        view: ((x)-> r = {}; r[v] = htmlGizmo.getElement(v) for v in x.split(\",\"); r.coffeecharniaConsole = element; r ) \"coffeeArea,runButton,enlargeButton,dragButton,shrinkButton,killButton,introFooter,resultFooter,resultDatum\"\n                 \n        # ace: ace ? null\n        # setupAce: @> @ace.edit(@view.coffeeArea)\n    \n        Error: Error\n    \n        files: { }\n    \n        __proto__: charnia\n    \n      app.setup()\n    \n      withAce ->\n        ace = window.ace\n\n        app.libs.ace = ace\n        \n        # Some sane defaults!  However, this code does not seem to effect any change\n        ###\n        false then ace?.options =\n            mode:             \"coffee\"\n            theme:            \"cobalt\"\n            gutter:           \"true\"\n            # fontSize:         \"10px\"\n            # softWrap:         \"off\"\n            # keybindings:      \"ace\"\n            # showPrintMargin:  \"true\"\n            # useSoftTabs:      \"true\"\n            # showInvisibles:   \"false\"\n        ###\n        inject = (options, callback) ->\n          baseUrl = options.baseUrl or \"../../src-noconflict\"\n          load = (path, callback) ->\n            # Intercept script request\n            src = baseUrl + \"/\" + path\n            (window.embeddedScriptsRequested ?= []).push src\n            if (code = window.embeddedScripts?[src])?\n              setTimeout <. window\n              ((x)-> setTimeout x, 0) ()->\n                window.eval code\n                callback() if callback\n              return\n            alert <. window\n            alert \"Internal error: script to preload: #{src}\"\n            (window.missingScripts ?= []).push src\n            return\n            head = document.getElementsByTagName(\"head\")[0]\n            s = document.createElement(\"script\")\n            s.type = 'text/javascript'\n            s.src = src\n            head.appendChild s\n            s.onload = s.onreadystatechange = (_, isAbort) ->\n              if isAbort or not s.readyState or s.readyState is \"loaded\" or s.readyState is \"complete\"\n                s = s.onload = s.onreadystatechange = null\n                callback()  unless isAbort\n              return\n      \n            return\n\n          showErrors = do (window)@> (x)->\n            try\n              x()\n            catch e\n              alert <. window\n              alert e\n      \n          showErrors ->\n            window.ace.require(\"ace/lib/net\").loadScript = load\n\n          if window.ace?\n            \n            # load \"ace.js\", function() {\n            window.ace.config.loadModule \"ace/ext/textarea\", -> showErrors ->\n            # load \"ace/ext/textarea\", -> showErrors ->\n              if false\n                event = window.ace.require(\"ace/lib/event\")\n                areas = document.getElementsByTagName(\"textarea\")\n                i = 0\n      \n                while i < areas.length\n                  event.addListener areas[i], \"click\", (e) ->\n                    window.ace.transformTextarea e.target, options.ace  if e.detail is 3\n                    return\n      \n                  i++\n              callback and callback()\n              return\n      \n          return\n      \n        # });\n      \n        window.ace? then camelcapBookmarklet.setup(window.ace)\n\n        # aceUrl <. app\n        aceUrl = \"ACE\"\n      \n        # Call the inject function to load the ace files.\n        inject { baseUrl: aceUrl }, do (ace = window.ace)-> ->\n          \n          # Transform the textarea on the page into an ace editor.\n          for a in [ app.view.coffeeArea ] # (x for x in document.getElementsByClassName(\"editArea\")).reverse()\n            do (a, e = ace.require(\"ace/ext/textarea\").transformTextarea(a))->\n              e.navigateFileEnd()\n              a.setupTransform(e)\n              a.onchange = ->\n                # alert \"a onchange \" + x\n                e.setValue @value, -1\n                return\n      \n              e.on \"change\", ->\n                # alert \"e change \" + x\n                a.value = e.getValue()\n                a.oninput?()\n                return\n      \n              e.on \"blur\", ->\n                # alert \"e blur \" + x\n                a.value = e.getValue()\n                a.onblur?()\n                return\n      \n              e.on \"focus\", ->\n                a.onfocus?()\n                return\n          return\n\n        chromeAndroidPasteFix = (event)->\n          setTimeout <. window\n          x = document.activeElement\n          \n          e = null\n          while x?\n            break if (e = x.previousSibling?.transformed)?.renderer\n            x = x.parentElement\n          if e? and event.clipboardData.getData(\"Text\") is \"\"\n              document.body.appendChild(area = document.createElement(\"textarea\"))\n              area.setAttribute \"style\", \"opacity:0;position:absolute\"\n              area.focus()\n              ((x)-> setTimeout x, 1000) (x)->\n                  document.body.removeChild area\n                  e.focus()\n              area.addEventListener \"paste\", (event)->\n                  ((x)-> setTimeout x, 0) ()->\n                      v = area.value\n                      document.body.removeChild area\n                      # alert v\n                      e.focus()\n                      e.insert(v)\n\n          true\n        \n        window.addEventListener 'paste', chromeAndroidPasteFix, true if (ua = window.navigator?.userAgent) and /mobile/i.test(ua) and /webkit\\/[0-5][0-9][0-9]\\./i.test(ua)\n\n        window.customDvorakKeys ?= do->\n          \n          fnKeyDown = false\n          \n          aceCommand = (cmd)->\n              x = document.activeElement\n              e = null\n              while x?\n                  break if (e = x.previousSibling?.transformed)?.renderer\n                  x = x.parentElement\n              e?.execCommand cmd\n          \n          # keypressHandler = (event)->\n              # (window.keys ?= [ ]).push { event, type:\"press\", m:getMods(event) }\n          keydownHandler = (event)->\n              # return\n              # (window.keys ?= [ ]).push { event, type:\"down\", m:getMods(event) }\n              event.keyCode is 0 then fnKeyDown = true\n              else if fnKeyDown\n                if event.keyCode is 78\n                    aceCommand (event.shiftKey then \"selectright\" else \"gotoright\")\n                else if event.keyCode is 16\n                else if event.keyCode is 72\n                    aceCommand (event.shiftKey then \"selectleft\" else \"gotoleft\")\n                else if event.keyCode is 84\n                    aceCommand (event.shiftKey then \"selectdown\" else \"golinedown\")\n                else if event.keyCode is 67\n                    aceCommand (event.shiftKey then \"selectup\" else \"golineup\")\n                else if event.keyCode is 71\n                    aceCommand (event.shiftKey then \"selecttolinestart\" else \"gotolinestart\")\n                else if event.keyCode is 82\n                    aceCommand (event.shiftKey then \"selecttolineend\" else \"gotolineend\")\n                else if event.keyCode is 189\n                    aceCommand \"backspace\"\n                else if event.keyCode is 191\n                    aceCommand \"del\"\n                else if event.keyCode is 187\n                    aceCommand (event.shiftKey then \"selectpageup\" else \"gotopageup\")\n                else if event.keyCode is 220\n                    aceCommand (event.shiftKey then \"selectpagedown\" else \"gotopagedown\")\n                else\n                    alert <. window\n                    alert \"Unexpected fn key combo: #{event.keyCode}\"\n                    fnKeyDown = false\n                # event.stopPropagation()\n                event.preventDefault()\n          keyupHandler = (event)->\n              # (window.keys ?= [ ]).push { event, type:\"up\", m:getMods(event) }\n              event.keyCode is 0 then fnKeyDown = false\n          \n          window.addEventListener \"keydown\", keydownHandler, true\n          window.addEventListener \"keyup\", keyupHandler, true\n          # window.addEventListener \"keypress\", (-> window.keypressHandler.apply @, arguments), true\n                 \n          true\n\n      cb?(app)";
      return x;
    })(function(opts) {
      var DynmodPrinter, Error, aceRefcoffeeMode, aceUrl, camelcapBookmarklet, cb, charnia, coffeescriptUrl, document, element, htmlGizmo, htmlcup, target, text, window, withAce, withCoffee, _ref;
      if (opts != null) {
        target = opts.target, text = opts.text, cb = opts.cb;
      }
      charnia = (this.view ? this.__proto__ : this);
      coffeescriptUrl = this.config.coffeescriptUrl;
      aceUrl = this.aceUrl, htmlGizmo = this.htmlGizmo;
      _ref = this.lib, document = _ref.document, window = _ref.window, DynmodPrinter = _ref.DynmodPrinter, Error = _ref.Error, camelcapBookmarklet = _ref.camelcapBookmarklet, htmlcup = _ref.htmlcup, aceRefcoffeeMode = _ref.aceRefcoffeeMode;
      htmlcup = htmlcup.compileLib();
      element = (htmlGizmo = {
        __proto__: htmlGizmo
      }).make((function(x) {
        return this.element = htmlcup.captureFirstTag(x);
      }), {
        controller: charnia,
        text: text
      });
      document.body.appendChild(element);
      withAce = function(cb) {
        return charnia.jsLoad('ace', aceUrl, cb);
      };
      withCoffee = function(cb) {
        return charnia.jsLoad('CoffeeScript', coffeescriptUrl, cb);
      };
      return withCoffee(function() {
        var app;
        app = {
          target: target,
          libs: {
            CoffeeScript: window.CoffeeScript,
            aceRefcoffeeMode: aceRefcoffeeMode
          },
          "eval": window["eval"],
          setTimeout: window.setTimeout,
          getInputSelection: window.getInputSelection,
          view: (function(x) {
            var r, v, _i, _len, _ref1;
            r = {};
            _ref1 = x.split(",");
            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
              v = _ref1[_i];
              r[v] = htmlGizmo.getElement(v);
            }
            r.coffeecharniaConsole = element;
            return r;
          })("coffeeArea,runButton,enlargeButton,dragButton,shrinkButton,killButton,introFooter,resultFooter,resultDatum"),
          Error: Error,
          files: {},
          __proto__: charnia
        };
        app.setup();
        withAce(function() {
          var ace, chromeAndroidPasteFix, inject, ua, _ref1;
          ace = window.ace;
          app.libs.ace = ace;

          /*
          false then ace?.options =
              mode:             "coffee"
              theme:            "cobalt"
              gutter:           "true"
               * fontSize:         "10px"
               * softWrap:         "off"
               * keybindings:      "ace"
               * showPrintMargin:  "true"
               * useSoftTabs:      "true"
               * showInvisibles:   "false"
           */
          inject = function(options, callback) {
            var baseUrl, load, showErrors;
            baseUrl = options.baseUrl || "../../src-noconflict";
            load = function(path, callback) {
              var alert, code, head, s, setTimeout, src, _ref1;
              src = baseUrl + "/" + path;
              (window.embeddedScriptsRequested != null ? window.embeddedScriptsRequested : window.embeddedScriptsRequested = []).push(src);
              if ((code = (_ref1 = window.embeddedScripts) != null ? _ref1[src] : void 0) != null) {
                setTimeout = window.setTimeout;
                (function(x) {
                  return setTimeout(x, 0);
                })(function() {
                  window["eval"](code);
                  if (callback) {
                    return callback();
                  }
                });
                return;
              }
              alert = window.alert;
              alert("Internal error: script to preload: " + src);
              (window.missingScripts != null ? window.missingScripts : window.missingScripts = []).push(src);
              return;
              head = document.getElementsByTagName("head")[0];
              s = document.createElement("script");
              s.type = 'text/javascript';
              s.src = src;
              head.appendChild(s);
              s.onload = s.onreadystatechange = function(_, isAbort) {
                if (isAbort || !s.readyState || s.readyState === "loaded" || s.readyState === "complete") {
                  s = s.onload = s.onreadystatechange = null;
                  if (!isAbort) {
                    callback();
                  }
                }
              };
            };
            showErrors = (function(x) {
              x.coffee = "(window)@> (x)->\n            try\n              x()\n            catch e\n              alert <. window\n              alert e\n      \n          ";
              return x;
            })(function(window) {
              return function(x) {
                var alert, e;
                try {
                  return x();
                } catch (_error) {
                  e = _error;
                  alert = window.alert;
                  return alert(e);
                }
              };
            })(window);
            showErrors(function() {
              return window.ace.require("ace/lib/net").loadScript = load;
            });
            if (window.ace != null) {
              window.ace.config.loadModule("ace/ext/textarea", function() {
                return showErrors(function() {
                  var areas, event, i;
                  if (false) {
                    event = window.ace.require("ace/lib/event");
                    areas = document.getElementsByTagName("textarea");
                    i = 0;
                    while (i < areas.length) {
                      event.addListener(areas[i], "click", function(e) {
                        if (e.detail === 3) {
                          window.ace.transformTextarea(e.target, options.ace);
                        }
                      });
                      i++;
                    }
                  }
                  callback && callback();
                });
              });
            }
          };
          if (window.ace != null) {
            camelcapBookmarklet.setup(window.ace);
          }
          aceUrl = "ACE";
          inject({
            baseUrl: aceUrl
          }, (function(ace) {
            return function() {
              var a, _fn, _i, _len, _ref1;
              _ref1 = [app.view.coffeeArea];
              _fn = function(a, e) {
                e.navigateFileEnd();
                a.setupTransform(e);
                a.onchange = function() {
                  e.setValue(this.value, -1);
                };
                e.on("change", function() {
                  a.value = e.getValue();
                  if (typeof a.oninput === "function") {
                    a.oninput();
                  }
                });
                e.on("blur", function() {
                  a.value = e.getValue();
                  if (typeof a.onblur === "function") {
                    a.onblur();
                  }
                });
                return e.on("focus", function() {
                  if (typeof a.onfocus === "function") {
                    a.onfocus();
                  }
                });
              };
              for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
                a = _ref1[_i];
                _fn(a, ace.require("ace/ext/textarea").transformTextarea(a));
              }
            };
          })(window.ace));
          chromeAndroidPasteFix = function(event) {
            var area, e, setTimeout, x, _ref1, _ref2;
            setTimeout = window.setTimeout;
            x = document.activeElement;
            e = null;
            while (x != null) {
              if ((_ref1 = (e = (_ref2 = x.previousSibling) != null ? _ref2.transformed : void 0)) != null ? _ref1.renderer : void 0) {
                break;
              }
              x = x.parentElement;
            }
            if ((e != null) && event.clipboardData.getData("Text") === "") {
              document.body.appendChild(area = document.createElement("textarea"));
              area.setAttribute("style", "opacity:0;position:absolute");
              area.focus();
              (function(x) {
                return setTimeout(x, 1000);
              })(function(x) {
                document.body.removeChild(area);
                return e.focus();
              });
              area.addEventListener("paste", function(event) {
                return (function(x) {
                  return setTimeout(x, 0);
                })(function() {
                  var v;
                  v = area.value;
                  document.body.removeChild(area);
                  e.focus();
                  return e.insert(v);
                });
              });
            }
            return true;
          };
          if ((ua = (_ref1 = window.navigator) != null ? _ref1.userAgent : void 0) && /mobile/i.test(ua) && /webkit\/[0-5][0-9][0-9]\./i.test(ua)) {
            window.addEventListener('paste', chromeAndroidPasteFix, true);
          }
          return window.customDvorakKeys != null ? window.customDvorakKeys : window.customDvorakKeys = (function() {
            var aceCommand, fnKeyDown, keydownHandler, keyupHandler;
            fnKeyDown = false;
            aceCommand = function(cmd) {
              var e, x, _ref2, _ref3;
              x = document.activeElement;
              e = null;
              while (x != null) {
                if ((_ref2 = (e = (_ref3 = x.previousSibling) != null ? _ref3.transformed : void 0)) != null ? _ref2.renderer : void 0) {
                  break;
                }
                x = x.parentElement;
              }
              return e != null ? e.execCommand(cmd) : void 0;
            };
            keydownHandler = function(event) {
              var alert;
              if (event.keyCode === 0) {
                return fnKeyDown = true;
              } else if (fnKeyDown) {
                if (event.keyCode === 78) {
                  aceCommand((event.shiftKey ? "selectright" : "gotoright"));
                } else if (event.keyCode === 16) {

                } else if (event.keyCode === 72) {
                  aceCommand((event.shiftKey ? "selectleft" : "gotoleft"));
                } else if (event.keyCode === 84) {
                  aceCommand((event.shiftKey ? "selectdown" : "golinedown"));
                } else if (event.keyCode === 67) {
                  aceCommand((event.shiftKey ? "selectup" : "golineup"));
                } else if (event.keyCode === 71) {
                  aceCommand((event.shiftKey ? "selecttolinestart" : "gotolinestart"));
                } else if (event.keyCode === 82) {
                  aceCommand((event.shiftKey ? "selecttolineend" : "gotolineend"));
                } else if (event.keyCode === 189) {
                  aceCommand("backspace");
                } else if (event.keyCode === 191) {
                  aceCommand("del");
                } else if (event.keyCode === 187) {
                  aceCommand((event.shiftKey ? "selectpageup" : "gotopageup"));
                } else if (event.keyCode === 220) {
                  aceCommand((event.shiftKey ? "selectpagedown" : "gotopagedown"));
                } else {
                  alert = window.alert;
                  alert("Unexpected fn key combo: " + event.keyCode);
                  fnKeyDown = false;
                }
                return event.preventDefault();
              }
            };
            keyupHandler = function(event) {
              if (event.keyCode === 0) {
                return fnKeyDown = false;
              }
            };
            window.addEventListener("keydown", keydownHandler, true);
            window.addEventListener("keyup", keyupHandler, true);
            return true;
          })();
        });
        return typeof cb === "function" ? cb(app) : void 0;
      });
    })
  };
});
